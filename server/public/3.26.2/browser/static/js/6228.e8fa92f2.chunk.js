/*! For license information please see 6228.e8fa92f2.chunk.js.LICENSE.txt */
(self.webpackChunk_itv_fe_cassandra=self.webpackChunk_itv_fe_cassandra||[]).push([[6228],{37054:function(e,t,n){e.exports=n(92558)},27145:function(e,t,n){e.exports=n(95311)},91269:function(e,t,n){e.exports=n(53269)},86604:function(e,t,n){e.exports=n(38650)},46319:function(e,t,n){e.exports=n(80477)},67837:function(e,t,n){e.exports=n(63386)},59697:function(e,t,n){e.exports=n(82459)},2027:function(e,t,n){e.exports=n(98882)},84273:function(e,t,n){e.exports=n(25243)},70379:function(e,t,n){e.exports=n(83584)},90203:function(e,t,n){e.exports=n(23903)},92275:function(e,t,n){e.exports=n(1093)},15311:function(e,t,n){"use strict";n.d(t,{Z:function(){return A}});var i=n(37054),a=n.n(i),r=n(59697),o=n.n(r),s=n(91269),c=n.n(s),d=n(51714),l=n(46319),h=n.n(l),_=n(27145),u=n.n(_),E=n(22934),p={};p[p.FUNCTION=0]="FUNCTION",p[p.CONSTRUCTOR=1]="CONSTRUCTOR",p[p.OBJECT=2]="OBJECT";var R,f=p.FUNCTION,T=p.CONSTRUCTOR,D=p.OBJECT,I={Devices:{Input:{KeyboardCapabilities:T,MouseCapabilities:T,TouchCapabilities:T},WiFi:{WiFiAdapter:D,WiFiAccessStatus:D}},Foundation:{Collections:{PropertySet:T},Uri:f},Globalization:{GeographicRegion:T},Media:{MediaExtensionManager:T,MediaPlaybackStatus:D,Protection:{MediaProtectionManager:T,PlayReady:{PlayReadyStatics:D}},SystemMediaTransportControls:{getForCurrentView:[f,"SystemMediaTransportControlsForCurrentView"]},SystemMediaTransportControlsButton:D},Networking:{Connectivity:{NetworkInformation:D},HostNameType:D},Security:{ExchangeActiveSyncProvisioning:{EasClientDeviceInformation:T}},Storage:{ApplicationData:{current:[D,"CurrentApplicationData"]},ApplicationDataCreateDisposition:D,Streams:{DataReader:D}},System:{Display:{DisplayRequest:T},Profile:{AnalyticsInfo:{versionInfo:{deviceFamily:D,deviceFamilyVersion:D}},HardwareIdentification:{getPackageSpecificToken:f},SystemIdentification:{getSystemIdForPublisher:f}}},UI:{WebUI:{WebUIApplication:D},Core:{SystemNavigationManager:D},ViewManagement:{ApplicationView:D,ApplicationViewBoundsMode:D,ApplicationViewScaling:D}}};function M(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var i,a,r=[],o=!0,s=!1;try{for(n=n.call(e);!(o=(i=n.next()).done)&&(r.push(i.value),!t||r.length!==t);o=!0);}catch(c){s=!0,a=c}finally{try{o||null==n.return||n.return()}finally{if(s)throw a}}return r}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return y(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return y(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function y(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function v(e,t,n){return v=S()?Reflect.construct.bind():function(e,t,n){var i=[null];i.push.apply(i,t);var a=new(Function.bind.apply(e,i));return n&&m(a,n.prototype),a},v.apply(null,arguments)}function S(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}var x=E.core.isBrowser(),N=p.CONSTRUCTOR,O=p.FUNCTION,g=p.OBJECT,b={};function P(e,t){var n,i=M(t,2),r=i[0],s=i[1],l=function(e){var t,n=u()(t=[e]).call(t),i=h()(n).call(n,(function(e){return e===N})),a=h()(n).call(n,(function(e){return e===O})),r=h()(n).call(n,(function(e){return e===g}));return{isCtor:i,isFunc:a,isObj:r,drillDown:!i&&!a&&!r,newName:n[1]}}(s),_=l.newName,E=l.drillDown,p=(0,d.Z)(l,["newName","drillDown"]);E&&c()(n=o()(s)).call(n,a()(P).call(P,null,e[r]));var R=function(e,t,n){var i=n.isCtor,a=n.isFunc,r=n.isObj;return x&&e?r?function(){return e[t]}:a?function(){return e[t].apply(e,arguments)}:i?function(){for(var n=arguments.length,i=new Array(n),a=0;a<n;a++)i[a]=arguments[a];return v(e[t],i)}:void 0:function(){}}(e,r,p);b[r]=R,_&&(b[_]=R)}c()(R=o()(I)).call(R,a()(P).call(P,null,Windows));var A=b},46228:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return Y}});var i=n(84273),a=n.n(i),r=n(86604),o=n.n(r),s=n(91269),c=n.n(s),d=n(37054),l=n.n(d),h=n(2027),_=n.n(h),u=n(32149),E=n(22934),p=n(15311),R=n(67837),f=new(n.n(R)())([["0x8004c065","(DRM_E_DEVCERT_REVOKED) Server can't deliver a license to a revoked client."],["0x8004c600","(DRM_E_SERVER_INTERNAL_ERROR) Server throws an internal server exception."],["0x8004c601","(DRM_E_SERVER_INVALID_MESSAGE) The request sent to the server was invalid."],["0x8004c60b","(DRM_E_SERVER_PROTOCOL_VERSION_MISMATCH) The protocol version specified in the request was not supported by the server."],["0x8004c604","(DRM_E_SERVER_SERVICE_SPECIFIC) The server throws a service specific exception (typically from the license handler)."],["0x8004c60d","(DRM_E_SERVER_PROTOCOL_REDIRECT) The protocol has a redirect."],["0x8004c605","(DRM_E_SERVER_DOMAIN_REQUIRED) In a domain scenario, server received a standard license request from client and requires the client to join domain in order to receive a domain-bound license."],["0x8004c606","(DRM_E_SERVER_RENEW_DOMAIN) In a domain scenario, server received a request from client with a domain certificate including an outdated domain version. Require the client to update its domain certificate."],["0x8004c602","(DRM_E_SERVER_DEVICE_LIMIT_REACHED) In a domain scenario, server was willing to add client to a domain account but the account has already reached the limit of number of devices."],["0x8004c60a","(DRM_E_SERVER_NOT_A_MEMBER) In a domain scenario, server received a valid domain bound license request from client, but client has been previously removed from domain by service."],["0x8004c60c","(DRM_E_SERVER_UNKNOWN_ACCOUNTID) In a domain scenario, server received a domain bound license request from client for a certain account id, but this id is unknown to the service."],["0x80042003","(Session Not Open) Indicates that the session handle of the operation is not a currently open session. This indicates an internal error in the MTP stack."],["0x80042004","(Invalid TransactionID) Indicates that the TransactionID is zero or does not refer to a valid transaction. This indicates an internal error in the MTP stack."],["0x80042005","(Operation Not Supported) Indicates that the operation code appears to be a valid code, but the device does not support the operation. This indicates an internal error in the MTP stack."],["0x80042006","(Parameter Not Supported) Indicates that a non-zero parameter was specified in conjunction with the operation, and the parameter is not used for that operation. This indicates an internal error in the MTP stack."],["0x80042007","(Incomplete Transfer) Indicates that the transfer did not complete, and any data transferred should be discarded. This response does not correspond to a cancelled transaction."],["0x80042008","(Invalid StorageID) Indicates that a storage ID sent with an operation does not refer to an actual valid store that is present on the device. This indicates an internal error in the MTP stack."],["0x80042009","(Invalid ObjectHandle) Indicates that an object handle does not refer to an actual object that is present on the device. The application should enumerate the storages again."],["0x8004200a","(DeviceProp Not Supported) Indicates that the device property code appears to be a valid code, but that property is not supported by the device. This indicates an internal error in the MTP stack."],["0x8004200b","(Invalid ObjectFormatCode) Indicates that the device does not support the particular object format code supplied in the given context."],["0x80042012","(Partial Deletion) Indicates that only a subset of the storages indicated for deletion were actually deleted, because some were write-protected or were on stores that are read-only."],["0x80042013","(Store Not Available) Indicates that the store (or the store that contains the indicated object) is not physically available. This can be caused by media ejection. This response shall not be used to indicate that the store is busy."],["0x80042014","(Specification By Format Unsupported) Indicates that the operation attempted to specify action only on objects of a particular format, and that capability is not supported. The operation should be attempted again without specifying by format. Any response of this nature infers that any future attempt to specify by format with the indicated operation will result in the same response. This indicates an internal error in the MTP stack."],["0x80042015","(No Valid ObjectInfo) Indicates that the host did not provide valid object info to device before transferring the object. This indicates an internal error in the MTP stack."],["0x80042016","(Invalid Code Format) Indicates that the data code does not have the correct format, and is therefore not valid. This indicates an internal error in the MTP stack."],["0x80042017","(Unknown Vendor Code) Device does not know how to handle the vendor extended code."],["0x8004201a","(Invalid ParentObject) Indicates that the object is not a valid parent object. This indicates an internal error in the MTP stack."],["0x8004201b","(Invalid DeviceProp Format) Indicates that an attempt was made to set a device property, but the data is not of the correct size or format. This indicates an internal error in the MTP stack."],["0x8004201c","(Invalid DeviceProp Value) Indicates that an attempt was made to set a device property to a value that is not allowed by the device. This indicates an internal error in the MTP stack."],["0x8004201e","(Session Already Open) Indicates that the host tried to open session while a session is already open. This indicates an internal error in the MTP stack."],["0x8004201f","(Transaction Cancelled) May be used to indicate that the operation was interrupted due to manual cancellation."],["0x80042020","(Specification of Destination Unsupported) Indicates that device does not support the specification of destination by the host. This indicates an internal error in the MTP stack."],["0x8004a801","(Invalid_ObjectPropCode) Indicates that the device does not support the sent Object Property Code in this context. This indicates an internal error in the MTP stack."],["0x8004a802","(Invalid_ObjectProp_Format) Indicates that an object property sent to the device is in an unsupported size or type. This indicates an internal error in the MTP stack."],["0x8004a803","(Invalid_ObjectProp_Value) Indicates that an object property sent to the device is the correct type, but contains a value that is not supported. This indicates an internal error in the MTP stack."],["0x8004a804","(Invalid_ObjectReference) Indicates that a sent Object Reference is not valid. Either the reference contains an object handle not present on the device, or the reference attempting to be set is unsupported in context. This can be due to an error in the MTP stack or due to application using a stale storage object."],["0x8004a806","(Invalid_Dataset) Indicates that the dataset sent in the data phase of this operation is invalid. This indicates an internal error in the MTP stack."],["0x8004a807","(Object_Too_Large) Indicates that the object desired to be sent cannot be stored in the file system of the device. This shall not be returned when there is insufficient space on the storage."],["0x00000000","(DRM_SUCCESS) The operation completed successfully."],["0x00000001","(DRM_S_FALSE) The method succeeded and returned the Boolean value FALSE."],["0x80004005","(DRM_E_FAIL) An unspecified failure has occurred."],["0x80070057","(DRM_E_INVALIDARG) A parameter is not valid or is a NULL pointer."],["0x80000002","(DRM_E_OUTOFMEMORY) The method failed to allocate the necessary memory."],["0x80030002","(DRM_E_FILENOTFOUND) The system cannot find the file specified."],["0x8007007a","(DRM_E_BUFFERTOOSMALL) A buffer is too small for the data."],["0x80004001","(DRM_E_NOTIMPL) Not implemented."],["0x80070103","(DRM_E_NOMORE) The end of the enumeration, or no more data available."],["0x8007534","(DRM_E_ARITHMETIC_OVERFLOW) An arithmetic operation resulted in overflow (loss of important bits)."],["0x8004c017","(DRM_E_ALGORITHMNOTSET) The encryption algorithm required for this operation is not supported."],["0x8004c053","(DRM_E_APPCERT_REVOKED) The application certificate given to DRM is revoked."],["0x8004c032","(DRM_E_LICENSE_TOOLONG) The license size is too long."],["0x80041107","(DRM_E_CH_ATTR_MISSING) A content header attribute is missing."],["0x8004110e","(DRM_E_CH_BAD_KEY) A key is not valid."],["0x80041106","(DRM_E_CH_CHECKSUM_MISSING) The content header checksum is missing."],["0x80041108","(DRM_E_CH_INVALID_HEADER) The content header is not valid."],["0x80041104","(DRM_E_CH_KID_MISSING) The KID attribute is missing from the content header."],["0x80041105","(DRM_E_CH_LAINFO_MISSING) The LAINFO attribute is missing from the content header."],["0x80041113","(DRM_E_CH_NOT_SIGNED) The header was not signed."],["0x8004110a","(DRM_E_CH_UNABLE_TO_VERIFY) The signature of the content header cannot be verified."],["0x80041116","(DRM_E_CH_UNKNOWN_ERROR) An unknown error occurred."],["0x8004110c","(DRM_E_CH_UNSUPPORTED_HASH_ALGORITHM) The hash algorithm is not supported."],["0x8004110d","(DRM_E_CH_UNSUPPORTED_SIGN_ALGORITHM) The signature algorithm is not supported."],["0x8004110b","(DRM_E_CH_UNSUPPORTED_VERSION) The content header version is not supported."],["0x80041103","(DRM_E_CH_VERSION_MISSING) The content header version is missing."],["0x800480d2","(DRM_E_CIPHER_NOTINITIALIZED) The DRM Cipher routines were not correctly initialized before calling the encryption/decryption routines."],["0x8004c01c","(DRM_E_CLIENTTIMEINVALID) The time/clock on the device is not synchronized with the license server within tolerance."],["0x8004c040","(DRM_E_CLK_INVALID_DATE) The secure clock response is not valid."],["0x8004c03f","(DRM_E_CLK_INVALID_RESPONSE) The secure clock response is not valid."],["0x8004c05b","(DRM_E_CLK_NOT_SET) A license may exist but cannot be used because the secure clock is not set."],["0x8004c04a","(DRM_E_CLK_NOT_SUPPORTED) The secure clock is not supported."],["0x8004c04d","(DRM_E_CLK_RESETSTATEREADERROR) The secure clock Reset State cannot be read."],["0x8004c04e","(DRM_E_CLK_RESETSTATEWRITEERROR) The secure clock Reset State cannot be written."],["0x8004c041","(DRM_E_CLK_UNSUPPORTED_VALUE) The secure clock response contains an unsupported value."],["0x8004c007","(DRM_E_CONDITIONFAIL) A condition in the license failed to pass."],["0x8004c008","(DRM_E_CONDITIONNOTSUPPORTED) A condition in the license is not supported by this version of DRM."],["0x8004c054","(DRM_E_CRYPTO_FAILED) A cryptographic operation failed."],["0x800480d3","(DRM_E_DECRYPT_NOTINITIALIZED) The DRM decryption routines were not correctly initialized before trying to decrypt data."],["0x8004c043","(DRM_E_DEVCERTEXCEEDSSIZELIMIT) The device certificate exceeds the maximum size."],["0x8004c04b","(DRM_E_DEVCERTINDIV_NOT_SUPPORTED) Device certificate individualization is not supported."],["0x8004c045","(DRM_E_DEVCERTREADERROR) The device certificate cannot be read."],["0x8004c044","(DRM_E_DEVCERTTEMPLATEEXCEEDSSIZELIMIT) The device certificate template exceeds the maximum size."],["0x8004c049","(DRM_E_DEVCERTTEMPLATEREADERROR) The device certificate template cannot be read."],["0x8004c046","(DRM_E_DEVCERTWRITEERROR) The device certificate cannot be stored."],["0x8004c001","(DRM_E_DEVICENOTINIT) This device has not been initialized against a DRM initialization service."],["0x8004c002","(DRM_E_DRMNOTINIT) The application did not call DRM_MGR_Initialize properly."],["0x8004c02d","(DRM_E_DUPLICATEDHEADERATTRIBUTE) The header contains a duplicate attribute."],["0x8004c01a","(DRM_E_FILEREADERROR) There was an error reading a file."],["0x8004c037","(DRM_E_FILESEEKERROR) There was an error seeking in a file."],["0x8004c01b","(DRM_E_FILEWRITEERROR) There was an error writing a file."],["0x8004c010","(DRM_E_HASHMISMATCH) A keyed hash check failed."],["0x8004c031","(DRM_E_HDSBLOCKMISMATCH) The Checksum attribute is missing from the header."],["0x8004c039","(DRM_E_HDSEXCLUSIVELOCKONLY) Only exclusive lock is accepted."],["0x8004c026","(DRM_E_HDSFILECORRUPTED) The HDS file is corrupted."],["0x8004c034","(DRM_E_HDSFILEEXISTS) The HDS file already exists."],["0x8004c036","(DRM_E_HDSLOCKFAILED) Locking a segment of the HDS file failed."],["0x8004c022","(DRM_E_HDSNAMESPACEFULL) The HDS namespace is full."],["0x8004c028","(DRM_E_HDSNAMESPACEINUSE) No HDS namespace in is in use."],["0x8004c023","(DRM_E_HDSNAMESPACENOTFOUND) No HDS namespace can be found."],["0x8004c038","(DRM_E_HDSNOTLOCKEDEXCLUSIVE) The existing lock is not exclusive."],["0x8004c03a","(DRM_E_HDSRESERVEDKEYDETECTED) An HDS reserved key value was detected in UniqueKey."],["0x8004c027","(DRM_E_HDSSEEKERROR) There was an error attempting to seek in the HDS file."],["0x8004c025","(DRM_E_HDSSLOTEXIST) No HDS dataslot exists."],["0x8004c024","(DRM_E_HDSSLOTNOTFOUND) The HDS dataslot cannot be found."],["0x8004c01d","(DRM_E_HDSSTOREFULL) The HDS data file is full."],["0x8004c03c","(DRM_E_HEADER_NOT_SET) A V2 content header is not set"],["0x8004c004","(DRM_E_INCOMPATABLELICENSESIZE) The size of the license is incompatible. DRM does not understand this license."],["0x8004c029","(DRM_E_INVALID_SECURESTORE_PASSWORD) The password used to open the secure store key was not able to validate the secure store hash."],["0x800480cf","() The DRM security elements must be updated. The user can go to the Windows Media Individualization Page to update their computer."],["0x8004c015","(DRM_E_INVALIDBINDID) The bind ID is not valid."],["0x8004c035","(DRM_E_INVALIDDEVICECERTIFICATE) The device certificate is not valid."],["0x8004c042","(DRM_E_INVALIDDEVICECERTIFICATETEMPLATE) The device certificate is not valid."],["0x8004c006","(DRM_E_INVALIDLICENSE) The license is not valid."],["0x8004c005","(DRM_E_INVALIDLICENSEFLAGS) The flags in the license are not valid. DRM does not understand them or they are conflicting."],["0x8004c019","(DRM_E_INVALIDLICENSESTORE) The license store version number is incorrect, or in some other way the store is not valid."],["0x8004c003","(DRM_E_INVALIDRIGHT) A right in the license in not valid."],["0x8004c011","(DRM_E_INVALIDTIME) A time structure is not valid."],["0x8004c020","(DRM_E_INVALIDXMLTAG) An XML tag is not valid."],["0x80048013","(DRM_E_LIC_KEY_AND_CERT_MISMATCH) A key and a certificate are mismatched."],["0x80048007","(DRM_E_LIC_KEY_DECODE_FAILURE) A key cannot be decoded."],["0x80048008","(DRM_E_LIC_SIGNATURE_FAILURE) The license signature is not valid."],["0x8004c009","(DRM_E_LICENSEEXPIRED) The license has expired either by depleting a play count or reaching an end date."],["0x8004c00c","(DRM_E_LICENSEMISMATCH) The license content ID or SDK ID does not match that requested by the application."],["0x8004c00f","(DRM_E_LICENSENOTBOUND) A license has not been bound to. Decryption cannot happen without a successful bind call."],["0x8004c013","(DRM_E_LICENSENOTFOUND) A license was not found in the external license store."],["0x8004c00a","(DRM_E_LICENSENOTYETVALID) The current time is prior to the license start time, so the license is not yet valid."],["0x8004c018","(DRM_E_LICENSESERVERNEEDSKEY) The license server needs a version of the device bind key from the initialization service."],["0x8004c012","(DRM_E_LICENSESTORENOTFOUND) The external license store was not found."],["0x8004c014","(DRM_E_LICENSEVERSIONNOTSUPPORTED) The DRM license version is not supported by the DRM version on the device."],["0x8004c3e8","(DRM_E_LOGICERR) The DRM code has a logic error in it. This result should never be returned. There is an unhandled code path if it is returned"],["0x8004c073","(DRM_E_LRB_INVALIDLICENSEDATA) The license revocation response is signed with a public key different from the license server's public key."],["0x8004c071","(DRM_E_LRB_INVALIDSIGNATURE) The signature in the license revocation response is not valid."],["0x8004c072","(DRM_E_LRB_LGPUBKEY_MISMATCH) The license revocation response is signed with a public key different from the license server's public key."],["0x8004c070","(DRM_E_LRB_NOLGPUBKEY) The license revocation response does not contain a valid license server public key."],["0x8004c03e","(DRM_E_MACHINEIDMISMATCH) The device has a machine ID different from that in the device certificate."],["0x8004c051","(DRM_E_METERING_INVALID_COMMAND) An invalid command was sent when processing the metering response."],["0x8004c05f","(DRM_E_METERING_MID_MISMATCH) The metering ID is not the same in the metering certificate and the metering response data."],["0x8004c04c","(DRM_E_METERING_NOT_SUPPORTED) Metering is not supported."],["0x8004c060","(DRM_E_METERING_RESPONSE_DECRYPT_FAILED) The encrypted section of the metering response cannot be decrypted"],["0x8004c052","(DRM_E_METERING_STORE_CORRUPT) The metering store is corrupted."],["0x8004c050","(DRM_E_METERING_WRONG_TID) The metering response contains the wrong transaction ID."],["0x8004c03d","(DRM_E_NEEDDEVCERTINDIV) The device certificate is a template. It needs to be individualized."],["0x8004c05c","(DRM_E_NO_CLK_SUPPORTED) This device does not support any clock. So time-bound licenses cannot be played."],["0x8004c05d","(DRM_E_NO_URL) The URL information cannot be found."],["0x8004c02c","(DRM_E_NOACTIONINLICENSEREQUEST) The license request does not contain any actions."],["0x8004c030","(DRM_E_NOCHECKSUMINHEADER) The checksum attribute is missing from the header."],["0x8004c02e","(DRM_E_NOKIDINHEADER) The key ID attribute is missing from the header."],["0x8004c02f","(DRM_E_NOLAINFOINHEADER) The LAINFO attribute is missing from the header."],["0x8004c00e","(DRM_E_NORIGHTSREQUESTED) The application did not request any rights before trying to bind."],["0x8004c021","(DRM_E_NOXMLCDATA) No XML CDATA can be found."],["0x8004c01f","(DRM_E_NOXMLCLOSETAG) An XML close tag cannot be found."],["0x8004c01e","(DRM_E_NOXMLOPENTAG) An XML open tag cannot be found."],["0x800480d5","(DRM_E_PKCRYPTO_FAILURE) An error occurred in an asymmetric cryptographic operation."],["0x8004c059","(DRM_E_POLICY_METERING_DISABLED) Metering code was called but metering is disabled by group or user policy."],["0x8004c05a","(DRM_E_POLICY_ONLINE_DISABLED) Online communication is disabled by group policy."],["0x8004c047","(DRM_E_PRIVKEYREADERROR) The private key for the device cannot be read."],["0x8004c048","(DRM_E_PRIVKEYWRITEERROR) The private key for the device cannot be stored."],["0x8004c00b","(DRM_E_RIGHTSNOTAVAILABLE) The rights requested by the application are not available in the license."],["0x8004c02a","(DRM_E_SECURESTORE_CORRUPT) The secure store is corrupted."],["0x8004c02b","(DRM_E_SECURESTORE_FULL) The current secure store key is full. No more data can be added."],["0x800480d4","(DRM_E_SECURESTORE_LOCKNOTOBTAINED) Before reading or writing data to the secure store in raw mode, the lock must be obtained by using DRM_SST_OpenData."],["0x8004c055","(DRM_E_STACK_CORRUPT) The stack allocator context is corrupted. This is usually caused by a buffer overrun."],["0x800480d1","(DRM_E_STACKTOOSMALL) The stack supplied to the DRM API was too small."],["0x800480d0","(DRM_E_SYNC_ENTRYNOTFOUND) The entry cannot be found in the synchronization store."],["0x8004c056","(DRM_E_UNKNOWN_BINDING_KEY) A matching binding key cannot be found for the license."],["0x8004c05e","(DRM_E_UNKNOWN_PROPERTY) A device property is unknown."],["0x8004c016","(DRM_E_UNSUPPORTEDALGORITHM) The encryption algorithm required for this operation is not supported."],["0x8004c057","(DRM_E_V1_LICENSE_CHAIN_NOT_SUPPORTED) License chaining with V1 content is not supported."],["0x8004c03b","(DRM_E_V1_NOT_SUPPORTED) V1 license acquisition is not supported."],["0x8004c058","(DRM_E_WRONG_TOKEN_TYPE) The wrong type of token was used."],["0x8004c00d","(DRM_E_WRONGTOKENTYPE) The token parameter is of an incompatible type."],["0x8004c04f","(DRM_E_XMLNOTFOUND) A required XML tag cannot be found."],["0xc00d2767","(NS_E_DRM_DEBUGGING_NOT_ALLOWED) A command cannot be run with a debugger attached."],["0x80049006","The DRM security elements must be updated. The user can go to the Windows Media Individualization Page to update their computer."],["0xc00d00cd","(NS_E_NOT_LICENSED) The content is not licensed."],["0xc00d2748","(NS_E_DRM_LICENSE_UNUSABLE) The license is unusable for an unspecified reason."]]),T=E.util.extend,D=E.PlaybackErrorConstants.ERROR.DRM.FAILED;function I(e){return function(e){if(Array.isArray(e))return M(e)}(e)||function(e){if("undefined"!==typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"===typeof e)return M(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return M(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}var y,v,S,m=E.util.stringifyWithoutDom,x=E.error.IllegalArgument,N=E.error.UnsupportedOperation,O=E.MediaConstants.DRM.PLAYREADY,g=E.MediaConstants.PROTOCOL,b=g.DASH,P=g.HLS,A=g.PROGRESSIVE,C=g.SMOOTH_STREAMING,L=E.MediaExtensionConstants.TYPE.DRM,U=E.PlayerConstants.EVENT,k=U.BUFFERING,w=U.ERROR,H=E.PlayerConstants.BUFFERING,V=H.START,F=H.FINISH,B=(0,u.Z)({logTag:"[microsoft-uwp/HTML5Player]"}),W=B.logError,G=B.info,j=B.debug,K=E.klass.create(E.HTML5Player,{MAX_COUNT:1,PRELOADABLE:!1},{_smtc:null,_doLoadPromise:null,_isPendingPlay:!1,_secondToPlay:null,_drmAgent:null,_isBuffering:null,_lastPlayPosition:null,_bufferingCheckHandle:null,init:function(){var e=p.Z.MediaPlaybackStatus(),t=e.playing,n=e.stopped,i=e.paused;y=t,v=n,S=i,this._super.apply(this,arguments)},getCapabilities:function(){return{protocol:[C,A,P,b],drm:[O]}},prepare:function(e){this._super(e),this._addUWPVideoEventListeners(),this._addSmoothStreamingPlayReadyExtensions(),this._smtc=p.Z.SystemMediaTransportControlsForCurrentView()},reset:function(){var e=this._removeUWPVideoEventListeners,t=this._resetPlayerObject,n=this._resetProperties,i=this._super,a=this._doLoadPromise;a||(a=_().resolve(),this._doLoadPromise=a),a.finally(l()(e).call(e,this)).finally(l()(t).call(t,this)).finally(l()(n).call(n,this)).finally(l()(i).call(i,this))},_addUWPVideoEventListeners:function(){var e,t;j("Register UWP specific player event handlers."),this.onUWPSeeked=l()(e=this._onUWPSeeked).call(e,this),this.onUWPPlaying=l()(t=this._onUWPPlaying).call(t,this);var n=this._playerObject;n.addEventListener("seeked",this.onUWPSeeked),n.addEventListener("playing",this.onUWPPlaying)},_removeUWPVideoEventListeners:function(){j("Unregister extra player event handlers.");var e=this._playerObject;e.removeEventListener("seeked",this.onUWPSeeked),e.removeEventListener("playing",this.onUWPPlaying),this.onUWPSeeked=null,this.onUWPPlaying=null},_addSmoothStreamingPlayReadyExtensions:function(){var e;j("Register Smooth Streaming and PlayReady plugins.");var t=new p.Z.MediaExtensionManager;c()(e=[["Microsoft.Media.AdaptiveStreaming.SmoothByteStreamHandler",".ism","text/xml"],["Microsoft.Media.AdaptiveStreaming.SmoothByteStreamHandler",".ism","application/vnd.ms-sstr+xml"],["Windows.Media.Protection.PlayReady.PlayReadyByteStreamHandler",".pyv",null],["Windows.Media.Protection.PlayReady.PlayReadyByteStreamHandler",".pya",null]]).call(e,(function(e){return t.registerByteStreamHandler.apply(t,I(e))}))},_resetPlayerObject:function(){j("Reset player object and DRM agent.");var e=this._drmAgent,t=this._playerObject;t.getAttribute("src")?(this.stop(),null==e||e.reset(),this._drmAgent=null,t.removeAttribute("src"),t.load()):j("Player has no src attribute, return.")},_resetProperties:function(){j("Nullify player properties."),this._smtc=null,this._doLoadPromise=_().resolve(),this._isPendingPlay=!1,this._secondToPlay=null,this._drmAgent=null,this._isBuffering=null,this._lastPlayPosition=null,this._bufferingCheckHandle=null},play:function(e){return j("play requested: second: ".concat(e)),this._doLoadPromise?(G("Currently loading, calling of play will be fulfilled once loading finished"),this._isPendingPlay=!0,this._secondToPlay=e,!1):(j("No pending load request. Play immediately."),this._super(e))},_doLoad:function(e,t){j("doLoad: ".concat(e,", ").concat(m(t)));var n=this._resetPlayerObject,i=this._loadDRM,a=this._super,r=this._playIfAsked,o=this._doLoadPromise;o||(o=_().resolve()),o.then(l()(n).call(n,this)).then((null==t?void 0:t.drm)?l()(i).call(i,this,e,t):function(){}).then(l()(a).call(a,this,e,t)).then(l()(r).call(r,this))},_loadDRM:function(e,t){var n=this;j("_loadDRM: ".concat(e,", ").concat(m(t)));var i=this._doLoadPromise;if(i)return j("Another DRM load is happening. Return that request instead."),i;this._doLoadPromise=this._drmLoader(t).finally((function(){return n._doLoadPromise=null}))},_drmLoader:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new(_())((function(n,i){j("Trying to create DRM agent.");var a=t.drm,r=e.getCapabilities().drm,s=void 0===r?[]:r;if(!a||!o()(s).call(s,a))throw new x("DRM '".concat(a,"' is not supported"));var c=e._extensionManager;if(!(null==c?void 0:c.isExtensionSupported(L)))throw new N("DRM extension is not defined properly.");c.getExtension(L).then((function(e){return e.createDRMAgent(a)})).then((function(n){return e._drmAgent=n,n.prepare(t,e)})).then(n,i)}))},_playIfAsked:function(){j("_playIfAsked"),this._isPendingPlay?(j("DRM agent created. Pending play will be triggered."),this.play(this._secondToPlay),this._isPendingPlay=!1,this._secondToPlay=null):j("No pending play.")},_doPlay:function(){j("doPlay"),this._super(),this._setNativePlaybackStatus(y)},_doStop:function(){j("doStop"),this._super(),this._stopBufferingCheck(),this._setNativePlaybackStatus(v)},_doPause:function(){j("doPause"),this._super(),this._setNativePlaybackStatus(S)},_onWaiting:function(){j("onWaiting"),this._isReady()?(this._isBuffering=!0,this.dispatchEvent(k,V)):j("Video not ready. onWaiting is ignored.")},onUWPSeeked:null,_onUWPSeeked:function(){j("onSeeked"),this._isBuffering=!1},onUWPPlaying:null,_onUWPPlaying:function(){j("onPlaying. Periodic buffer check will start."),this._startBufferingCheck()},_setNativePlaybackStatus:function(e){j("smtc.playbackStatus = ".concat(e));var t=this._smtc;t&&(t.playbackStatus=e)},_startBufferingCheck:function(){var e;this._stopBufferingCheck(),this._bufferingCheckHandle=a()(l()(e=this._checkIfBuffering).call(e,this),100)},_checkIfBuffering:function(){var e=this._isBuffering,t=Math.floor(this.getCurrentTime()),n=this._isPaused(),i=this._lastPlayPosition===t,a=this._lastPlayPosition+.095;n||i?this.dispatchEvent(k,F):!e&&t<a?(this.dispatchEvent(k,V),this._isBuffering=!0):e&&t>=a&&(this.dispatchEvent(k,F),this._isBuffering=!1),this._lastPlayPosition=t},_stopBufferingCheck:function(){clearInterval(this._bufferingCheckHandle),this._bufferingCheckHandle=null},_onError:function(e){var t=e.target,n=function(e){var t=function(e){return(e>>>0).toString(16).toLowerCase()}(e),n=f.get(t);if(n)return T({msExtendedCode:{original:e,hex:t,description:n}},D,!0)}((t=void 0===t?{error:{}}:t).error.msExtendedCode);if(!n)return this._super(e);this._doStop(),n.original=e;var i=n.description,a=n.msExtendedCode,r=a.hex,o=a.description;W("\n        onRenderError: ".concat(i,";\n        msExtendedCode: ").concat(r,";\n        description: ").concat(o,"\n      ")),this.dispatchEvent(w,n)}}),Y=K},32149:function(e,t,n){"use strict";var i=n(37054),a=n.n(i),r=n(20846),o=0,s=1,c=2,d=3,l=4,h=function(){};t.Z=function(e){var t,n,i,_,u,E=e.logTag,p=void 0===E?"[xdk-log]":E,R=e.transport,f=r.default.get("logging",{}),T=f.transport,D=f.level,I=void 0===D?2:D,M=R||T||console,y=I<=l?a()(t=M.error).call(t,M,p):h;return{error:y,logError:y,warn:I<=d?a()(n=M.warn).call(n,M,p):h,log:I<=c?a()(i=M.log).call(i,M,p):h,info:I<=s?a()(_=M.info).call(_,M,p):h,debug:I<=o?a()(u=M.debug).call(u,M,p):h}}},7130:function(e,t,n){n(48378),n(26555);var i=n(2152);e.exports=i("Array").flat},76652:function(e,t,n){var i=n(89663),a=n(7130),r=Array.prototype;e.exports=function(e){var t=e.flat;return e===r||i(r,e)&&t===r.flat?a:t}},42955:function(e,t,n){"use strict";var i=n(54225),a=n(83062),r=n(60488),o=n(71011);e.exports=function e(t,n,s,c,d,l,h,_){for(var u,E=d,p=0,R=!!h&&o(h,_);p<c;)p in s&&(u=R?R(s[p],p,n):s[p],l>0&&i(u)?E=e(t,n,u,a(u),E,l-1)-1:(r(E+1),t[E]=u),E++),p++;return E}},48378:function(e,t,n){"use strict";var i=n(39705),a=n(42955),r=n(13822),o=n(83062),s=n(59159),c=n(55580);i({target:"Array",proto:!0},{flat:function(){var e=arguments.length?arguments[0]:void 0,t=r(this),n=o(t),i=c(t,0);return i.length=a(i,t,t,n,0,void 0===e?1:s(e)),i}})},26555:function(e,t,n){n(75470)("flat")},95311:function(e,t,n){var i=n(76652);e.exports=i},25243:function(e,t,n){n(507);var i=n(29384);e.exports=i.setInterval},51714:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var i=n(90203),a=n(70379),r=n(92275);function o(e,t){if(null==e)return{};var n,o,s=function(e,t){if(null==e)return{};var n,i,o={},s=r(e);for(i=0;i<s.length;i++)n=s[i],a(t).call(t,n)>=0||(o[n]=e[n]);return o}(e,t);if(i){var c=i(e);for(o=0;o<c.length;o++)n=c[o],a(t).call(t,n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}}}]);
//# sourceMappingURL=6228.e8fa92f2.chunk.js.map