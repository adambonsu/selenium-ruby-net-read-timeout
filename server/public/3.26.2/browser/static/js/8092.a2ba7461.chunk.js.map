{"version":3,"file":"static/js/8092.a2ba7461.chunk.js","mappings":"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","sources":["xdk/devices/youview/player/HTML5Player.js"],"sourcesContent":["/* eslint-disable no-void */\n/* eslint-disable no-fallthrough */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-return-assign */\n/* eslint-disable no-sequences */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable no-shadow */\n/* eslint-disable one-var */\n/* eslint-disable no-plusplus */\n/* eslint-disable consistent-return */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-unused-vars */\nimport e from '@accedo/xdk-device-youview-html5-contrib/esm/player/HTML5Player';\nimport t from '@accedo/xdk-log';\nimport { klass as r, HTML5Player as o, util as a, MediaConstants as i } from '@accedo/xdk-core';\n\nconst {\n        PROTOCOL: { PROGRESSIVE: n, DASH: d },\n        DRM: { PLAYREADY: s }\n    } = i,\n    { stringifyWithoutDom: l } = a,\n    { info: p, debug: _, logError: m } = t({ logTag: '[youview/player/HTML5Player]' }),\n    y = r.create(\n        e,\n        { SINGLE_PLAYER_ONLY: !0, PRELOADABLE: !1 },\n        {\n            __drm: null,\n            __url: '',\n            __mediaOption: null,\n            __yvReportData: null,\n            __playReadyDrmURL: null,\n            __lastPlayReadyDrmURL: null,\n            __protocol: null,\n            __dashInitialSeek: !1,\n            __drmAgent: null,\n            __doLoadPromise: null,\n            __metaDataLoaded: !1,\n            __reportCreated: !1,\n            async load(e, t = {}) {\n                p(`load: ${e}, ${l(t)}`);\n                const r = t?.protocol !== d || t?.drm ? t : { ...t, drm: s },\n                    { ok: o, drm: a, ...i } = this._loadCommon(e, r),\n                    n = () => {\n                        if (\n                            (this._playerObject?.removeEventListener('loadedmetadata', n),\n                            (this.__metaDataLoaded = !0),\n                            !this.__reportCreated)\n                        )\n                            try {\n                                this._yvReporting().__report();\n                            } catch (e) {\n                                m(e);\n                            }\n                    };\n                if (\n                    (this.__metaDataLoaded && this._playerObject?.removeEventListener('loadedmetadata', n),\n                    this._playerObject?.addEventListener('loadedmetadata', n),\n                    !o)\n                )\n                    return !1;\n                a === s ? await this._loadPlayReady(i) : this._loadNonPlayReady(i);\n            },\n            _loadCommon(e, t) {\n                if (!this._prepared) return { ok: !1 };\n                try {\n                    this._yvReporting().__stop();\n                } catch (e) {\n                    m(e);\n                }\n                (this.__url = e),\n                    (this.__mediaOption = t),\n                    (this.__protocol = null),\n                    this.stop(),\n                    this.__resetPlayerSource(),\n                    this.__resetPlayreadyAttr(),\n                    this._playerObject?.load();\n                const {\n                    protocol: r,\n                    parentNode: o,\n                    drm: a = null,\n                    drmURL: i = t?.protectionData?.['com.microsoft.playready']?.serverURL || '',\n                    yvReportData: n = {}\n                } = t;\n                return (\n                    (this.__dashInitialSeek = r === d),\n                    (this.__protocol = r),\n                    (this.__drm = a),\n                    (this.__yvReportData = n),\n                    o && this._preparePlayerObject(o),\n                    { ok: !0, drm: a, mediaURL: e, option: t, drmURL: i }\n                );\n            },\n            _doPlay() {\n                _('_doPlay'), this._show(), this._playerObject?.play();\n            },\n            reset() {\n                _('reset()'),\n                    this._prepared &&\n                        ((this.__reportCreated = !1),\n                        this._playerObject?.reportmediaElement?.onVideoElementEvent({ type: 'abort' }),\n                        this.__resetPlayerSource(),\n                        this.__resetPlayreadyAttr(),\n                        this._playerObject?.removeEventListener('error', this.onError),\n                        this._playerObject?.load(),\n                        (this.__url = ''),\n                        (this.__mediaOption = null),\n                        (this.__yvReportData = null),\n                        (this.__protocol = null),\n                        (this.__dashInitialSeek = !1),\n                        (this.__drmAgent = null),\n                        (this.__doLoadPromise = null),\n                        (this.__metaDataLoaded = !1),\n                        this._super());\n            },\n            _yvReporting() {\n                const { _playerObject: e, __yvReportData: t } = this,\n                    r = (t) => {\n                        const r = window.youview.private.reporting.getVideoDetails(e);\n                        (e.reportmediaElement.details = r), e.yv_reporter.reportEvent(t, r);\n                    },\n                    o = () => {\n                        const o = ({ type: t }) => {\n                                if (!e.reportmediaElement || !e.reportmediaElement.reportingActive) return;\n                                const a = [\n                                    'waiting',\n                                    'loadeddata',\n                                    'resize',\n                                    'seeking',\n                                    'abort',\n                                    'suspend',\n                                    'durationchange',\n                                    'ended',\n                                    'canplay',\n                                    'emptied',\n                                    'loadstart',\n                                    'loadedmetadata',\n                                    'error',\n                                    'canplaythrough',\n                                    'ratechange',\n                                    'seeked',\n                                    'pause',\n                                    'volumechange',\n                                    'stalled',\n                                    'timeupdate',\n                                    'play',\n                                    'playing'\n                                ];\n                                switch (t) {\n                                    case 'error':\n                                        m(`MediaError:${e.error.code}`);\n                                    case 'abort':\n                                    case 'ended':\n                                        e.yv_reporter &&\n                                            (r('abort'),\n                                            _(`${t}: Stop reporting...`),\n                                            e.yv_reporter.stop(),\n                                            (e.yv_reporter = null),\n                                            delete e.yv_reporter);\n                                        for (let t = 0; t < a.length; t++) e.removeEventListener(a[t], o, !1);\n                                        this._yvReporting\n                                            ? (_('resetting'), (e.reportmediaElement = null), delete e.reportmediaElement)\n                                            : _('unable to reset yv reporting'),\n                                            e.yv_reporter && window.removeEventListener('beforeunload', e.yv_reporter.beforeUnload, !1);\n                                        break;\n                                    case 'timeupdate':\n                                        break;\n                                    default:\n                                        e.yv_reporter && r(t);\n                                }\n                            },\n                            a = {\n                                attributes: e.attributes,\n                                assetId: t.assetId,\n                                reportingActive: !0,\n                                onVideoElementEvent: o,\n                                addEventListener: (t, r, a) => {\n                                    e.addEventListener(t, o, a);\n                                },\n                                removeEventListener: (t, r, a) => {\n                                    e.removeEventListener(t, o, a);\n                                }\n                            };\n                        if (e.reportmediaElement) {\n                            if (e.reportmediaElement.assetId === t.assetId)\n                                return (\n                                    _('resuming from the midroll, so sending the resume event'),\n                                    e.reportmediaElement.details\n                                        ? (e.reportmediaElement.yv_reporter.reportEvent('play', e.reportmediaElement.details),\n                                          _('sent play event for resume'))\n                                        : _('missing details so did not send play event for resume'),\n                                    (e.reportmediaElement.reportingActive = !0),\n                                    null\n                                );\n                            (e.reportmediaElement.reportingActive = !0), _('playing the different main asset, so it is not a resume');\n                        }\n                        return a;\n                    },\n                    a = (e, t) => {\n                        const r = new RegExp(`<${e}>(.+)</${e}>`),\n                            o = t.match(r);\n                        return o && o[1] ? o[1] : null;\n                    };\n                return {\n                    __report: () => {\n                        if (!window.youview) return void _('No youview object exists on window');\n                        const r = t.platformMetadata;\n                        if (!r) return void _(\"No video object or platformMetadata given, Youview Reporting won't be started!\");\n                        const i = t.appContext,\n                            n = a('CRID', r),\n                            d = a('IMI', r);\n                        try {\n                            _('Starting report');\n                            const t = o();\n                            if (!t) return void _('instructed not to register to the native yv reporting....');\n                            const r = window.youview.reporting.ReportFactory.createMediaAttributesForOnDemand(\n                                i,\n                                window.youview.reporting.MediaTypeValues.OD_CATCH_UP,\n                                n,\n                                d\n                            );\n                            window.youview.reporting.ReportFactory.createReport(t, r),\n                                ((t) => {\n                                    (e.yv_reporter = t.yv_reporter), (e.reportmediaElement = t);\n                                })(t),\n                                (this.__reportCreated = !0),\n                                _('Completed report');\n                        } catch (e) {\n                            m(e);\n                        }\n                    },\n                    __stop: () => {\n                        e.reportmediaElement\n                            ? (t.isAd\n                                  ? (_('it is the advert'),\n                                    e.reportmediaElement.reportingActive\n                                        ? (_('switched from main asset to advert, so sending the pause event'), r('pause'))\n                                        : _('advert to advert so will not take action'))\n                                  : _('it is the main asset'),\n                              (e.reportmediaElement.reportingActive = !1))\n                            : _('This is the play from start, fresh reporting');\n                    }\n                };\n            }\n        }\n    );\nexport default y;\n"],"names":["i","d","PROGRESSIVE","DASH","s","l","a","t","logTag","p","info","_","debug","m","logError","y","r","e","SINGLE_PLAYER_ONLY","PRELOADABLE","__drm","__url","__mediaOption","__yvReportData","__playReadyDrmURL","__lastPlayReadyDrmURL","__protocol","__dashInitialSeek","__drmAgent","__doLoadPromise","__metaDataLoaded","__reportCreated","load","protocol","drm","_loadCommon","o","ok","n","_playerObject","removeEventListener","_yvReporting","__report","addEventListener","_loadPlayReady","_loadNonPlayReady","this","_prepared","__stop","stop","__resetPlayerSource","__resetPlayreadyAttr","parentNode","drmURL","protectionData","serverURL","yvReportData","_preparePlayerObject","mediaURL","option","_doPlay","_show","play","reset","reportmediaElement","onVideoElementEvent","type","onError","_super","window","youview","reporting","getVideoDetails","details","yv_reporter","reportEvent","reportingActive","error","code","length","beforeUnload","attributes","assetId","RegExp","match","platformMetadata","appContext","ReportFactory","createMediaAttributesForOnDemand","MediaTypeValues","OD_CATCH_UP","createReport","isAd"],"sourceRoot":""}