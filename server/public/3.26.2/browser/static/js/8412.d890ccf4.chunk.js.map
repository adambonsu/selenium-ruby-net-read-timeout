{"version":3,"file":"static/js/8412.d890ccf4.chunk.js","mappings":"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","sources":["../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/array/is-array.js","../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/bind.js","../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/find.js","../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js","../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/map.js","../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/some.js","xdk/devices/samsung-tizen/player/extension/AVPlayerSubtitles.js","../../../node_modules/.pnpm/@accedo+xdk-device-samsung-tizen@4.0.6_567d038adb0a2ca2afc20b8bd2695c13/node_modules/@accedo/xdk-device-samsung-tizen/esm/avplayProxy.js","../../../node_modules/.pnpm/@accedo+xdk-device-samsung-tizen@4.0.6_567d038adb0a2ca2afc20b8bd2695c13/node_modules/@accedo/xdk-device-samsung-tizen/esm/player/extension/AVPlayerUtils.js","../../../node_modules/.pnpm/@accedo+xdk-log@4.0.4_@accedo+xdk-config@4.0.2/node_modules/@accedo/xdk-log/esm/log.js"],"sourcesContent":["module.exports = require(\"core-js-pure/stable/array/is-array\");","module.exports = require(\"core-js-pure/stable/instance/bind\");","module.exports = require(\"core-js-pure/stable/instance/find\");","module.exports = require(\"core-js-pure/stable/instance/includes\");","module.exports = require(\"core-js-pure/stable/instance/map\");","module.exports = require(\"core-js-pure/stable/instance/some\");","/* eslint-disable camelcase, max-len */\n/* eslint-disable no-underscore-dangle */\n/**\n * Subtitle strategy for Tizen's AVPlayer. This strategy instance is\n * initialised by {@link media/Subtitle} and has the full knowledge of the\n * associated XDK player object and the actual Tizen player object underneath.\n *\n * @class samsung-tizen/player/extension/AVPlayerSubtitles\n * @implements interfaces/SubtitleStrategy\n */\n\n/**\n * Reference Documentation extracted from:\n * https://developer.samsung.com/smarttv/develop/api-references/samsung-product-api-references/avplay-api.html\n *\n *\n * [AVPlayManager]\n *\n * void setSelectTrack(AVPlayStreamType trackType, long trackIndex) - https://developer.samsung.com/smarttv/develop/api-references/samsung-product-api-references/avplay-api.html#AVPlay-AVPlayManager-setSelectTrack\n *\n * Constraints:\n *  1 Can be called in the following states: \"READY\" (for Smooth Streaming only), \"PLAYING\", \"PAUSED\" (for TEXT tracks only)\n *  2 If buffering is not complete, calling this method for an AUDIO track returns an error.\n *  3 The trackType \"TEXT\" is not supported for DASH streaming.\n *\n * AVPlayCurrentStreamInfo getCurrentStreamInfo()\n *\n * AVPlayStreamInfo[] getTotalTrackInfo()\n *\n *\n * [AVPlayStreamType]\n * enum AVPlayStreamType {\n *   \"VIDEO\",\n *   \"AUDIO\",\n *   \"TEXT\"\n * };\n *\n *\n * [AVPlayStreamInfo]\n * dictionary AVPlayStreamInfo {\n *   unsigned long index;\n *   AVPlayStreamType type;\n *   DOMString extra_info;\n * };\n * extra_info for subtitle tracks: \"{\"track_num\":\"%d\",\"track_lang\":\"%s\",\"subtitle_type\":\"%d\",\"fourCC\":\"%s\"}\"\n * sample: \"{\"track_num\":\"0\",\"track_lang\":\"eng\",\"subtitle_type\":\"-1\",\"fourCC\":\"TTML\"}\"\n *\n *\n * [AVPlayPlaybackCallback]\n *\n * onsubtitlechange event: https://developer.samsung.com/smarttv/develop/api-references/samsung-product-api-references/avplay-api.html#AVPlay-AVPlayPlaybackCallback-onsubtitlechange\n *\n * void onsubtitlechange(unsigned long duration, DOMString subtitles, unsigned long type, AVPlaySubtitleAttribute attributes);\n * Parameters:\n *  - duration: unsigned long\n *  - subtitles: DOMString\n *  - type: unsigned long\n *  - attriCount: unsigned long\n *  - attributes: AVPlaySubtitleAttribute \"attr_type\": \"AttributeType:value\"; \"start_pos\": start position as long; \"stop_pos\": stop position as long\n *  - Exceptions:\n *\n * WebAPIException\n *  - with error type NotSupportedError, if this feature is not supported.\n *\n *  - with error type UnknownError, for any other error.\n */\n\nimport logger from '@accedo/xdk-log';\nimport { klass, error, ISubtitleStrategy, util } from '@accedo/xdk-core';\nimport * as avplayProxy from '@accedo/xdk-device-samsung-tizen/esm/avplayProxy';\nimport { canGetAllTracks, canSetTrack, cannot } from '@accedo/xdk-device-samsung-tizen/esm/player/extension/AVPlayerUtils';\n\nconst logTag = '[samsung-tizen/player/extension/AVPlayerSubtitles]';\nconst { logError, debug } = logger({ logTag });\nconst { IllegalArgument, IllegalState } = error;\n\nconst SUBTITLE_TYPE = 'TEXT';\nconst LANGCODE = 'LANGCODE';\n\nconst SubtitleStrategy = klass.create(\n    [ISubtitleStrategy],\n    {\n        SUBTITLE_TYPE,\n        LANGCODE\n    },\n    {\n        /**\n         * A local reference to the XDK player object.\n         *\n         * @name __player\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @type {Object}\n         * @private\n         */\n        __player: null,\n\n        /**\n         * A local reference to the Tizen player object.\n         *\n         * @name __playerObject\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @type {Object}\n         * @private\n         */\n        __playerObject: null,\n\n        /**\n         * List of known subtitles.\n         *\n         * @name __subtitleArr\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @type {SubtitleTracks}\n         * @private\n         */\n        __subtitleArr: [],\n\n        /**\n         * Prepare the Subtitle Strategy instance, which has the full\n         * knowledge of the player object it is associated.\n         *\n         * @method prepare\n         * @param {interfaces/Player} player - Reference to the XDK player\n         * instance that implement the interface {@link interfaces/Player}.\n         *\n         * @returns {undefined} Always returned undefined, even if the input\n         * parameter cause a failure in the preparation.\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @public\n         * @see {@link media/Subtitle}\n         * @see {@link media/ExtensionManager}\n         */\n        prepare(player) {\n            if (!player) {\n                logError('Fail to prepare the Tizen AVPlayer Subtitle Strategy without the XDK player object.');\n\n                return;\n            }\n\n            this.__player = player;\n            this.__playerObject = player._getPlayerObject();\n\n            if (!this.__playerObject) {\n                logError('Fail to prepare the Tizen AVPlayer Subtitle Strategy without the AVPlayer object.');\n\n                return;\n            }\n\n            debug('AVPlayer Subtitle Strategy prepared.');\n        },\n\n        /**\n         * An array of {@link SubtitleObject}.\n         *\n         * @global\n         * @typedef {Array.<SubtitleObject>} SubtitleTracks\n         */\n\n        /**\n         * Returns an array of all known subtitle tracks. Video, audio or other\n         * tracks will not appear in the array.\n         *\n         * As defined by Samsung's documentation, this function can be called\n         * when the player is ready or during playing. If the player is at\n         * other state, the function will simply return a rejected promise.\n         *\n         * @method getSubtitles\n         * @returns {Promise.<SubtitleTracks>} Native Promise, wrapping an\n         * array of {@link SubtitleObject}.\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @public\n         */\n        async getSubtitles() {\n            if (!canGetAllTracks(this.__player)) {\n                throw new IllegalState(cannot('get subtitle tracks'));\n            }\n            const subtitleTracks = avplayProxy.getTotalTrackInfo().reduce((acc, info, index) => {\n                const { type, extra_info } = info;\n\n                if (type === SUBTITLE_TYPE) {\n                    let extraInfoJS;\n\n                    try {\n                        extraInfoJS = JSON.parse(extra_info);\n                    } catch (e) {\n                        logError('extra_info parse error');\n                    }\n\n                    const { track_lang: language, fourCC } = extraInfoJS;\n\n                    acc.push({\n                        id: index, // This is needed like this and not with the info.index\n                        language,\n                        label: language, // There's no other language related info in the extra_info Object\n                        mimetype: fourCC,\n                        extra_info // We add the extra_info just in case\n                    });\n                }\n\n                return acc;\n            }, []);\n\n            this.__subtitleArr = subtitleTracks;\n\n            return subtitleTracks;\n        },\n\n        /**\n         * Set the current subtitle track to the track identified by the\n         * track `id`. If succeeded, the new ID can be retrieved by calling the\n         * function {@link getCurrentSubtitle}.\n         *\n         * As defined by Samsung's documentation, this function can only be\n         * called when the player is playing or currently paused. In other\n         * state, this function will simply returned a rejected promise.\n         *\n         * @method showSubtitle\n         * @param {Integer} index - Index of the subtitle track to be set active. The\n         * id of all available subtitle track(s) can be found by calling the\n         * function {@link getSubtitles}.\n         * @returns {Promise} Native Promise.\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @public\n         * @see {@link getCurrentSubtitle}\n         */\n        async showSubtitle(index) {\n            if (!canSetTrack(this.__player)) {\n                throw new IllegalState(cannot('set subtitle tracks'));\n            }\n\n            const trackExists = this.__subtitleArr.some(({ id: trackId }) => trackId === index);\n\n            if (!trackExists || util.isUndefined(index)) {\n                throw new IllegalArgument(`Track ${index} cannot be found.`);\n            }\n            avplayProxy.setSelectTrack(SUBTITLE_TYPE, index);\n            avplayProxy.setSilentSubtitle(false);\n\n            return true;\n        },\n\n        /**\n         * Hide the subtitles, removing the onsubtitlechange event.\n         *\n         * @method hideSubtitle\n         * @returns {Promise} Native Promise.\n         * rejected one otherwise.\n         * @memberof samsung-tizen/player/extension/AVPlayerSubtitles#\n         * @public\n         */\n        async hideSubtitle() {\n            avplayProxy.setSilentSubtitle(true);\n        },\n\n        deinit() {\n            this.__player = null;\n            this.__playerObject = null;\n            this.__subtitleArr = [];\n        }\n    }\n);\n\nexport default SubtitleStrategy;\n","/*******************************************************************************\n* @license\n* Copyright (c) 2016 - present Accedo. All Rights Reserved.\n* \n* This source code, its use, and distribution, is subject to the terms\n* and conditions of the applicable license agreement.\n* \n* Accedo Build XDK Device Package - Samsung Tizen (@accedo/xdk-device-samsung-tizen) 4.0.6\n* \n*******************************************************************************/\nimport _includesInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/includes\";import _Array$isArray from\"@babel/runtime-corejs3/core-js-stable/array/is-array\";import _findInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/find\";import config from\"@accedo/xdk-config\";import logger from\"@accedo/xdk-log\";const{logError:logError,debug:debug}=logger({logTag:\"[samsung-tizen/avplayProxy]\"}),INVALID=\"__XDK:avplayProxy:invalid\",apiError=(e,r)=>(logError(`Error with API: webapis.avplay.${e}. ${r}`),INVALID),proxy=e=>(...r)=>{const{avplay:t=null}=webapis||{};if(!t)return apiError(e,\"webapis.avplay is not available.\");\"getState\"!==e&&isVerbose(e)&&debug(`${e}() @state: ${getState()}`);try{return t[e](...r)}catch(r){return apiError(e,r.message)}},AVPLAYER_ID=\"samsung-tizen/player/AVPlayer\",CONFIG_ITEM=\"log-blacklist\",BLACKLIST=(()=>{const{players:e=[]}=config.get(config.KEY.DEVICE_PACKAGES_INFO_KEY,{}),r=(_findInstanceProperty(e).call(e,(({id:e=\"\"})=>e===AVPLAYER_ID))||{})[CONFIG_ITEM];return _Array$isArray(r)?r:null})(),isVerbose=e=>!!_Array$isArray(BLACKLIST)&&_includesInstanceProperty(BLACKLIST).call(BLACKLIST,e),close=proxy(\"close\"),getCurrentStreamInfo=proxy(\"getCurrentStreamInfo\"),getCurrentTime=proxy(\"getCurrentTime\"),getDuration=proxy(\"getDuration\"),getState=proxy(\"getState\"),getStreamingProperty=proxy(\"getStreamingProperty\"),getTotalTrackInfo=proxy(\"getTotalTrackInfo\"),jumpBackward=proxy(\"jumpBackward\"),jumpForward=proxy(\"jumpForward\"),open=proxy(\"open\"),pause=proxy(\"pause\"),play=proxy(\"play\"),prepareAsync=proxy(\"prepareAsync\"),restore=proxy(\"restore\"),seekTo=proxy(\"seekTo\"),setDisplayRect=proxy(\"setDisplayRect\"),setDrm=proxy(\"setDrm\"),setListener=proxy(\"setListener\"),setSelectTrack=proxy(\"setSelectTrack\"),setExternalSubtitlePath=proxy(\"setExternalSubtitlePath\"),setSilentSubtitle=proxy(\"setSilentSubtitle\"),setSpeed=proxy(\"setSpeed\"),setStreamingProperty=proxy(\"setStreamingProperty\"),setTimeoutForBuffering=proxy(\"setTimeoutForBuffering\"),stop=proxy(\"stop\"),suspend=proxy(\"suspend\");export{INVALID,close,getCurrentStreamInfo,getCurrentTime,getDuration,getState,getStreamingProperty,getTotalTrackInfo,jumpBackward,jumpForward,open,pause,play,prepareAsync,restore,seekTo,setDisplayRect,setDrm,setListener,setSelectTrack,setExternalSubtitlePath,setSilentSubtitle,setSpeed,setStreamingProperty,setTimeoutForBuffering,stop,suspend};","/*******************************************************************************\n* @license\n* Copyright (c) 2016 - present Accedo. All Rights Reserved.\n* \n* This source code, its use, and distribution, is subject to the terms\n* and conditions of the applicable license agreement.\n* \n* Accedo Build XDK Device Package - Samsung Tizen (@accedo/xdk-device-samsung-tizen) 4.0.6\n* \n*******************************************************************************/\nimport _someInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/some\";import _mapInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/map\";import*as avplayProxy from\"../../avplayProxy\";const isAtState=(t,e)=>{const a=_mapInstanceProperty(e).call(e,(e=>{var a;return null==t||null===(a=t.__PLAYER_STATE)||void 0===a?void 0:a[e]}));return _someInstanceProperty(a).call(a,(e=>null==t?void 0:t.__isState(e)))};function canGetAllTracks(t){return isAtState(t,[\"READY\",\"PLAYING\",\"PAUSED\"])}const canSetTrack=t=>isAtState(t,[\"PLAYING\",\"PAUSED\"]),canSetExternalSubtitle=t=>isAtState(t,[\"IDLE\",\"READY\",\"PLAYING\",\"PAUSED\"]),cannot=t=>`${t} while the player is at ${avplayProxy.getState()} state.`;export{canGetAllTracks,canSetTrack,canSetExternalSubtitle,cannot};","/*******************************************************************************\n* @license\n* Copyright (c) 2016 - present Accedo. All Rights Reserved.\n* \n* This source code, its use, and distribution, is subject to the terms\n* and conditions of the applicable license agreement.\n* \n* Accedo Build XDK Log (@accedo/xdk-log) 4.0.4\n* \n*******************************************************************************/\nimport _bindInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/bind\";import config from\"@accedo/xdk-config\";const DEFAULT_LOG_TAG=\"[xdk-log]\",LOG_LEVELS={ALL:-1,DEBUG:0,INFO:1,LOG:2,WARN:3,ERROR:4},{DEBUG:DEBUG,INFO:INFO,LOG:LOG,WARN:WARN,ERROR:ERROR}=LOG_LEVELS,noop=()=>{},createLogger=({logTag:o=\"[xdk-log]\",transport:r})=>{var n,e,t,a,c;const{transport:l,level:g=2}=config.get(\"logging\",{}),L=r||l||console,p=g<=ERROR?_bindInstanceProperty(n=L.error).call(n,L,o):noop;return{error:p,logError:p,warn:g<=WARN?_bindInstanceProperty(e=L.warn).call(e,L,o):noop,log:g<=LOG?_bindInstanceProperty(t=L.log).call(t,L,o):noop,info:g<=INFO?_bindInstanceProperty(a=L.info).call(a,L,o):noop,debug:g<=DEBUG?_bindInstanceProperty(c=L.debug).call(c,L,o):noop}};export{LOG_LEVELS};export default createLogger;"],"names":["module","exports","logger","logTag","logError","debug","IllegalArgument","error","IllegalState","SUBTITLE_TYPE","SubtitleStrategy","klass","ISubtitleStrategy","LANGCODE","__player","__playerObject","__subtitleArr","prepare","player","this","_getPlayerObject","getSubtitles","canGetAllTracks","cannot","subtitleTracks","avplayProxy","reduce","acc","info","index","type","extra_info","extraInfoJS","JSON","parse","e","language","track_lang","fourCC","push","id","label","mimetype","showSubtitle","canSetTrack","some","util","hideSubtitle","deinit","INVALID","apiError","r","proxy","webapis","avplay","t","isVerbose","getState","message","BLACKLIST","config","players","_findInstanceProperty","call","_Array$isArray","_includesInstanceProperty","close","getCurrentStreamInfo","getCurrentTime","getDuration","getStreamingProperty","getTotalTrackInfo","jumpBackward","jumpForward","open","pause","play","prepareAsync","restore","seekTo","setDisplayRect","setDrm","setListener","setSelectTrack","setExternalSubtitlePath","setSilentSubtitle","setSpeed","setStreamingProperty","setTimeoutForBuffering","stop","suspend","isAtState","a","_mapInstanceProperty","__PLAYER_STATE","_someInstanceProperty","__isState","canSetExternalSubtitle","DEBUG","INFO","LOG","WARN","ERROR","noop","n","c","o","transport","l","level","g","L","console","p","_bindInstanceProperty","warn","log"],"sourceRoot":""}