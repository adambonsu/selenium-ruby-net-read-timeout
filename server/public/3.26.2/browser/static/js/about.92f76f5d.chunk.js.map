{"version":3,"file":"static/js/about.92f76f5d.chunk.js","mappings":"ioDAEA,IAWA,EAT+B,WACNA,OAAOC,QAAQC,EAAAA,IAAMC,QACtC,SAACC,EAAY,GAAD,aAAGC,EAAG,KAAEC,EAAK,YAJP,SAAH,OAAMD,EAAG,EAAHA,IAAG,OAAOL,OAAOO,OAAOC,EAAAA,IAA0BC,OAAM,SAACC,GAAS,OAAKA,IAAcL,CAAG,GAAE,CAI/EM,CAAkB,CAAEN,IAAAA,IAAM,YAAOD,GAAW,CAAEE,IAASF,CAAW,GAClG,IAGSQ,SAAQ,SAACP,GAAG,OAAKQ,EAAAA,EAAAA,IAAkBR,EAAI,GACxD,E,WCDQS,EAAoBC,EAAAA,EAAAA,SAAVC,EAAUD,EAAAA,EAAAA,MAEtBE,EAAa,WACfC,KACAC,EAAAA,EAAAA,MAEA,IACMC,EADeC,OAAOC,SAASC,KACRC,QAAQR,EAAOF,GAE5CO,OAAOC,SAASC,KAAOH,CAC3B,EAEMK,EAAgB,SAAH,OAAMC,EAAU,EAAVA,WAAU,OAC/B,gBAACC,EAAA,EAAW,KACR,gBAACC,EAAA,GAAY,KACT,gBAACC,EAAA,GAAO,CAACC,QAAQ,MAAI,qDACrB,gBAAC,KAAc,KACX,gBAACC,EAAA,QAAM,CAACC,QAASf,EAAYgB,OAAQP,GAAW,QAK9C,EAGlBD,EAAcS,UAAY,CACtBR,WAAYS,IAAAA,KAAAA,YAGhB,Q,69BC5BA,IAuCA,EAvCc,WACV,IAAiE,KAAfC,EAAAA,EAAAA,WAAS,GAAM,GAA1DC,EAAiB,KAAEC,EAAoB,KACK,KAAfF,EAAAA,EAAAA,WAAS,GAAM,GAA5CG,EAAU,KAAEC,EAAa,KAE1BC,GAAaC,EAAAA,EAAAA,cAAY,WAC3BJ,GAAqB,GACrBE,GAAc,EAClB,GAAG,CAACF,EAAsBE,IAEpBd,GAAagB,EAAAA,EAAAA,cAAY,WAC3BJ,GAAqB,GACrBE,GAAc,EAClB,GAAG,CAACF,EAAsBE,IAE1B,OACI,gCACI,gBAACG,EAAA,EAAY,CAACC,GAAG,YAAYC,iBAAkBC,EAAAA,GAAAA,aAAwBC,eAAgBC,EAAAA,GAAAA,MAAeT,WAAYA,GAC9G,uBAAKU,UAAWC,IAAGC,EAAAA,KAAMC,EAAAA,WAAY,UACjC,uBAAKH,UAAWC,IAAGG,EAAAA,SAAUC,EAAAA,oBAAqB,qBAC9C,gBAACC,EAAAC,WAAU,CAACP,UAAU,iBAAiBQ,MAAK,iBAAYC,EAAAA,GAAqBC,eAAa,IAC1F,qBAAGV,UAAU,oBAAkB,0IAI/B,qBAAGA,UAAU,oBAAkB,iJAI/B,gBAAClB,EAAA,QAAM,CAACkB,UAAU,eAAeL,GAAG,iBAAiBX,OAAO,aAAaD,QAASS,GAAW,YAMxGJ,GAAqB,gBAAC,EAAa,CAACX,WAAYA,IAG7D,C","sources":["pages/Settings/About/ResetAppModal/removeLocalStorageKeys.js","pages/Settings/About/ResetAppModal/ResetAppModal.jsx","pages/Settings/About/About.jsx"],"sourcesContent":["import { removeStorageItem, Keys, keysToPreserveOnAppReset } from 'utils/storage';\n\nconst shouldPreserveKey = ({ key }) => Object.values(keysToPreserveOnAppReset).every((keyToKeep) => keyToKeep !== key);\n\nconst removeLocalStorageKeys = () => {\n    const keysToRemove = Object.entries(Keys).reduce(\n        (accumulator, [key, value]) => (shouldPreserveKey({ key }) ? [...accumulator, value] : accumulator),\n        []\n    );\n\n    keysToRemove.forEach((key) => removeStorageItem(key));\n};\n\nexport default removeLocalStorageKeys;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/Button';\nimport ModalPortal from 'components/ModalPortal';\nimport OverlayModal, { OverlayButtons } from 'components/OverlayModal';\nimport { paths } from 'routes/constants';\nimport Heading from '@itv/fe-components/Heading';\nimport removeLocalStorageKeys from './removeLocalStorageKeys';\nimport { removeSignInSyncTokensCookies } from '../../../../helpers/syncSignIn';\n\nconst { homepage, about } = paths;\n\nconst reloadHome = () => {\n    removeLocalStorageKeys();\n    removeSignInSyncTokensCookies();\n\n    const previousPath = window.location.href;\n    const newPath = previousPath.replace(about, homepage);\n\n    window.location.href = newPath;\n};\n\nconst ResetAppModal = ({ hideDialog }) => (\n    <ModalPortal>\n        <OverlayModal>\n            <Heading element=\"h2\">Your settings will be reset and ITVX will reload.</Heading>\n            <OverlayButtons>\n                <Button onClick={reloadHome} backTo={hideDialog}>\n                    OK\n                </Button>\n            </OverlayButtons>\n        </OverlayModal>\n    </ModalPortal>\n);\n\nResetAppModal.propTypes = {\n    hideDialog: PropTypes.func.isRequired\n};\n\nexport default ResetAppModal;\n","import React, { useState, useCallback } from 'react';\nimport cn from 'classnames';\nimport { PageHeader } from 'components/Page';\nimport Button from 'components/Button';\nimport { PageTypes, PageIds } from 'utils/tracking';\nimport { REACT_APP_VERSION } from 'utils/envVarProvider';\nimport './About.scss';\nimport { grid, gridColumn, gridItem, gridItemAlignCenter } from '@itv/fe-components/cjs/common/styles/grid.cls';\nimport ResetAppModal from './ResetAppModal';\nimport SettingsPage from '../SettingsPage';\n\nconst About = () => {\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n    const [stealFocus, setStealFocus] = useState(false);\n\n    const showDialog = useCallback(() => {\n        setShowConfirmDialog(true);\n        setStealFocus(false);\n    }, [setShowConfirmDialog, setStealFocus]);\n\n    const hideDialog = useCallback(() => {\n        setShowConfirmDialog(false);\n        setStealFocus(true);\n    }, [setShowConfirmDialog, setStealFocus]);\n\n    return (\n        <>\n            <SettingsPage id=\"aboutPage\" trackingPageType={PageTypes.GENERAL_INFO} trackingPageId={PageIds.ABOUT} stealFocus={stealFocus}>\n                <div className={cn(grid, gridColumn, 'About')}>\n                    <div className={cn(gridItem, gridItemAlignCenter, 'About__container')}>\n                        <PageHeader className=\"About__heading\" title={`ITVX: v${REACT_APP_VERSION}`} isLargerTitle />\n                        <p className=\"About__paragraph\">\n                            Pressing the &apos;reset&apos; button below will allow you to reset your ITVX settings. Please note, this will\n                            not reset your Parental Controls.\n                        </p>\n                        <p className=\"About__paragraph\">\n                            This will also require us to locate you again by postcode entry, and you&apos;ll need to sign into your ITVX\n                            account again once reset is complete.\n                        </p>\n                        <Button className=\"About__reset\" id=\"reset-settings\" backTo=\"about-link\" onClick={showDialog}>\n                            Reset\n                        </Button>\n                    </div>\n                </div>\n            </SettingsPage>\n            {showConfirmDialog && <ResetAppModal hideDialog={hideDialog} />}\n        </>\n    );\n};\n\nexport default About;\n"],"names":["Object","entries","Keys","reduce","accumulator","key","value","values","keysToPreserveOnAppReset","every","keyToKeep","shouldPreserveKey","forEach","removeStorageItem","homepage","paths","about","reloadHome","removeLocalStorageKeys","removeSignInSyncTokensCookies","newPath","window","location","href","replace","ResetAppModal","hideDialog","ModalPortal","OverlayModal","Heading","element","Button","onClick","backTo","propTypes","PropTypes","useState","showConfirmDialog","setShowConfirmDialog","stealFocus","setStealFocus","showDialog","useCallback","SettingsPage","id","trackingPageType","PageTypes","trackingPageId","PageIds","className","cn","grid","gridColumn","gridItem","gridItemAlignCenter","Page","PageHeader","title","REACT_APP_VERSION","isLargerTitle"],"sourceRoot":""}