{"version":3,"file":"static/js/aftv-device-package.1c26a2c6.chunk.js","mappings":"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","sources":["../../../node_modules/.pnpm/@babel+runtime-corejs3@7.16.8/node_modules/@babel/runtime-corejs3/core-js-stable/instance/bind.js","xdk/devices/amazonfiretv/Network.js","xdk/devices/amazonfiretv/TVKey.js","xdk/devices/amazonfiretv/System.js","xdk/devices/amazonfiretv/DevicePackage.js","../../../node_modules/.pnpm/@accedo+xdk-log@4.0.4_@accedo+xdk-config@4.0.2/node_modules/@accedo/xdk-log/esm/log.js"],"sourcesContent":["module.exports = require(\"core-js-pure/stable/instance/bind\");","/* eslint-disable no-underscore-dangle */\n\nimport { klass, promise, AbstractNetwork, Environment, ConnectionPoller } from '@accedo/xdk-core';\n\nconst NAVIGATOR_DEFINED = typeof navigator !== 'undefined';\nconst sEnv = Environment.singleton();\n\nconst Network = klass.create(\n    AbstractNetwork,\n    {},\n    {\n        _internetPoller: null,\n\n        init() {\n            this._super();\n\n            this.__checkNetworkStatus();\n\n            if (this._internetPoller) {\n                this._internetPoller.startPolling();\n            }\n        },\n\n        getConnectionStatus() {\n            return promise.resolve(this._isInternetConnected());\n        },\n\n        _isInternetConnected() {\n            return NAVIGATOR_DEFINED && navigator.onLine;\n        },\n\n        __checkNetworkStatus() {\n            this._internetPoller = new ConnectionPoller(\n                (callback) => callback(this._isInternetConnected()),\n                (status) => {\n                    sEnv.dispatchEvent(sEnv.SYSTEM.NETWORK_STATUS_CHANGED, status);\n                },\n                {\n                    networkStatus: this._isInternetConnected()\n                }\n            );\n        },\n\n        deinit() {\n            const poller = this._internetPoller;\n\n            if (poller) {\n                poller.stopPolling();\n                this._internetPoller = null;\n            }\n\n            this._super();\n        }\n    }\n);\n\nexport default Network;\n","/* eslint-disable no-underscore-dangle */\n\nimport config from '@accedo/xdk-config';\nimport { BrowserTVKey, klass, util, keyMap, vKey } from '@accedo/xdk-core';\n\nconst TVKey = klass.create(\n    BrowserTVKey,\n    {},\n    {\n        init() {\n            const packageInfo = config.get(config.KEY.DEVICE_PACKAGES_INFO_KEY, {});\n            const keyMapping = util.clone(keyMap.KEYBOARD_KEY, true);\n            const charMapping = util.clone(keyMap.KEYBOARD_CHAR, true);\n            keyMapping.VKey[38] = vKey.UP;\n            keyMapping.VKey[40] = vKey.DOWN;\n            keyMapping.VKey[37] = vKey.LEFT;\n            keyMapping.VKey[39] = vKey.RIGHT;\n            keyMapping.VKey[8] = vKey.BACK;\n            keyMapping.VKey[27] = vKey.BACK;\n            keyMapping.VKey[13] = vKey.OK;\n            keyMapping.VKey[227] = vKey.RW;\n            keyMapping.VKey[228] = vKey.FF;\n            keyMapping.VKey[179] = vKey.PLAY_PAUSE;\n            this._preventDefaultKeyAction = !!packageInfo['prevent-default-key-action'];\n            this._initKeyMapping(keyMapping, charMapping);\n            this.initKeyHandling();\n        },\n        _keyHandler(event) {\n            this._super(event);\n            if (event.key === 'ArrowLeft' || event.key === 'ArrowRight' || event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n                event.preventDefault();\n            }\n        }\n    }\n);\nexport default TVKey;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-underscore-dangle */\n\nimport _bindInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/bind';\n\nimport config from '@accedo/xdk-config';\nimport logger from '@accedo/xdk-log';\nimport { core, klass, util, MouseOnOff, HTML5System, Environment } from '@accedo/xdk-core';\n\nimport Network from './Network';\nimport TVKey from './TVKey';\n\nconst { warn } = logger({\n    logTag: '[workstation/System]'\n});\n\nconst sEnv = Environment.singleton();\n\nconst System = klass.create(\n    HTML5System,\n    {},\n    {\n        __resizable: false,\n        __resolution1080p: false,\n        init() {\n            this._super();\n            this._network = new Network();\n            this._key = new TVKey();\n            this._mouse = new MouseOnOff();\n            const configDetails = config.get(config.KEY.DEVICE_PACKAGES_INFO_KEY, {});\n            this.__resizable = !!configDetails.resize;\n            this.__resolution1080p = !!configDetails['1080p'];\n            if (this.__resizable) {\n                this.__addResizeListener();\n            }\n        },\n        __addResizeListener() {\n            if (!core.root.addEventListener) {\n                warn('Cannot add resize event listener on non-browser.');\n                return;\n            }\n            core.root.addEventListener(\n                'resize',\n                _bindInstanceProperty(util).call(\n                    util,\n                    () => {\n                        sEnv.dispatchEvent(sEnv.SYSTEM.RESIZE, this.getDeviceResolution());\n                    },\n                    this\n                )\n            );\n        },\n        __getModelAndFirmware() {\n            // Example from: https://developer.amazon.com/docs/fire-tv/user-agent-strings.html\n            // Mozilla/5.0 (Linux; Android 4.2.2; AFTB Build/JDQ39) AppleWebKit/537.22 (KHTML, like Gecko) Chrome/25.0.1364.173 Mobile Safari/537.22\n            const ua = navigator.userAgent;\n            const deviceInfoRe = /\\(([^(]+)\\)/g;\n            const found = ua.match(deviceInfoRe);\n            if (found) {\n                const deviceInfo = found[0].split('; ');\n                const modelAndBuild = deviceInfo[2];\n                if (modelAndBuild) {\n                    const spacePos = modelAndBuild.indexOf(' ');\n                    const model = modelAndBuild.substring(0, spacePos);\n                    const firmware = modelAndBuild.substring(spacePos + 1, modelAndBuild.length);\n                    return { model, firmware };\n                }\n            }\n            return null;\n        },\n        getFirmwareVersion() {\n            const { firmware } = this.__getModelAndFirmware();\n            return firmware;\n        },\n        getModel() {\n            const { model } = this.__getModelAndFirmware();\n            return model;\n        },\n        getDeviceType() {\n            return 'FireTV';\n        },\n        getFirmwareYear() {\n            return null;\n        },\n        getDeviceResolution() {\n            return {\n                width: 1280,\n                height: 720\n            };\n        },\n        isSSLSupported() {\n            return true;\n        },\n        isMouseSupported() {\n            return false;\n        },\n        isHardwareKeyboardSupported() {\n            return false;\n        },\n        isSOPSupported() {\n            return true;\n        },\n        exit() {\n            window.open('', '_self').close();\n        },\n        deinit() {\n            this.__resizable = false;\n            this.__resolution1080p = false;\n            this._super();\n        }\n    }\n);\n\nexport default System;\n","/* eslint-disable no-underscore-dangle */\n\nimport { klass, AbstractDevicePackage, StorageManager, DeviceExtensionManager } from '@accedo/xdk-core';\n\nimport System from './System';\n\nconst DevicePackage = klass.create(\n    AbstractDevicePackage,\n    {},\n    {\n        async setup() {\n            this._storageManager = StorageManager.singleton();\n            this._extensionManager = DeviceExtensionManager.singleton();\n            this._system = new System();\n        }\n    }\n);\nexport default DevicePackage;\n","/*******************************************************************************\n* @license\n* Copyright (c) 2016 - present Accedo. All Rights Reserved.\n* \n* This source code, its use, and distribution, is subject to the terms\n* and conditions of the applicable license agreement.\n* \n* Accedo Build XDK Log (@accedo/xdk-log) 4.0.4\n* \n*******************************************************************************/\nimport _bindInstanceProperty from\"@babel/runtime-corejs3/core-js-stable/instance/bind\";import config from\"@accedo/xdk-config\";const DEFAULT_LOG_TAG=\"[xdk-log]\",LOG_LEVELS={ALL:-1,DEBUG:0,INFO:1,LOG:2,WARN:3,ERROR:4},{DEBUG:DEBUG,INFO:INFO,LOG:LOG,WARN:WARN,ERROR:ERROR}=LOG_LEVELS,noop=()=>{},createLogger=({logTag:o=\"[xdk-log]\",transport:r})=>{var n,e,t,a,c;const{transport:l,level:g=2}=config.get(\"logging\",{}),L=r||l||console,p=g<=ERROR?_bindInstanceProperty(n=L.error).call(n,L,o):noop;return{error:p,logError:p,warn:g<=WARN?_bindInstanceProperty(e=L.warn).call(e,L,o):noop,log:g<=LOG?_bindInstanceProperty(t=L.log).call(t,L,o):noop,info:g<=INFO?_bindInstanceProperty(a=L.info).call(a,L,o):noop,debug:g<=DEBUG?_bindInstanceProperty(c=L.debug).call(c,L,o):noop}};export{LOG_LEVELS};export default createLogger;"],"names":["module","exports","NAVIGATOR_DEFINED","navigator","sEnv","Environment","klass","AbstractNetwork","_internetPoller","init","this","_super","__checkNetworkStatus","startPolling","getConnectionStatus","promise","_isInternetConnected","onLine","ConnectionPoller","callback","status","dispatchEvent","SYSTEM","NETWORK_STATUS_CHANGED","networkStatus","deinit","poller","stopPolling","BrowserTVKey","packageInfo","config","keyMapping","util","keyMap","charMapping","VKey","vKey","_preventDefaultKeyAction","_initKeyMapping","initKeyHandling","_keyHandler","event","key","preventDefault","warn","logger","logTag","HTML5System","__resizable","__resolution1080p","_network","Network","_key","TVKey","_mouse","MouseOnOff","configDetails","resize","__addResizeListener","core","_bindInstanceProperty","call","RESIZE","getDeviceResolution","__getModelAndFirmware","found","userAgent","match","modelAndBuild","split","spacePos","indexOf","model","substring","firmware","length","getFirmwareVersion","getModel","getDeviceType","getFirmwareYear","width","height","isSSLSupported","isMouseSupported","isHardwareKeyboardSupported","isSOPSupported","exit","window","open","close","DevicePackage","AbstractDevicePackage","setup","_storageManager","StorageManager","_extensionManager","DeviceExtensionManager","_system","System","DEBUG","INFO","LOG","WARN","ERROR","noop","n","e","t","a","c","o","r","transport","l","level","g","L","console","p","error","logError","log","info","debug"],"sourceRoot":""}