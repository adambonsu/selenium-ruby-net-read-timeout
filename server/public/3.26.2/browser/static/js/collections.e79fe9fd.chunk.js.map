{"version":3,"file":"static/js/collections.e79fe9fd.chunk.js","mappings":"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","sources":["components/ViewAllTile/ViewAllTile.jsx","pages/Collections/hooks/useAllTargetedContainers.js","components/CollectionSlider/getViewAllEnabled.js","components/CollectionSlider/CollectionSlider.jsx","components/CollectionSlider/constants.js","components/Letterbox/constants.js","components/Letterbox/hooks/useDebounceLetterboxImage.js","components/Letterbox/Letterbox.jsx","components/Letterbox/Description/Description.jsx","components/LetterboxSelector/Letterboxes/EpisodeLetterbox/EpisodeLetterbox.jsx","components/LetterboxSelector/Letterboxes/BritboxPromoLetterbox/BritboxPromoLetterbox.jsx","helpers/getChannelLogo.js","components/LetterboxSelector/Letterboxes/SimulcastLetterbox/SimulcastLetterbox.jsx","components/LetterboxSelector/Letterboxes/ViewAllLetterbox/ViewAllLetterbox.jsx","components/LetterboxSelector/Letterboxes/ViewAllLetterbox/images/view-all.jpg","components/LetterboxSelector/Letterboxes/ViewAllLetterbox/images/view-all@2x.jpg","helpers/showTimeLeft.js","components/LetterboxSelector/Letterboxes/ContinueWatchingLetterbox/ContinueWatchingLetterbox.jsx","components/BroadcastInfo/BroadcastInfo.jsx","components/BroadcastInfo/hooks/useContentLogic.jsx","components/LetterboxSelector/Letterboxes/CommonLetterbox/CommonLetterbox.jsx","components/LetterboxSelector/Letterboxes/HubplusPromoLetterbox/HubplusPromoLetterbox.jsx","components/LetterboxSelector/LetterboxSelector.jsx","pages/Collections/CollectionsContent/CollectionsContent.jsx","pages/Collections/Collections.jsx","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_asciiToArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_castSlice.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_createCaseFirst.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_hasUnicode.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_stringToArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_unicodeToArray.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/capitalize.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/fp/capitalize.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/upperFirst.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport SharedPropTypes from 'helpers/propTypes';\nimport isFunction from 'lodash/fp/isFunction';\nimport { usePreviewUpdater } from 'contexts/PreviewContext';\nimport MemoLink from 'components/MemoLink';\nimport './ViewAllTile.scss';\n\nconst ViewAllTile = ({ link, category, children, id, position, backTo, throttle, onClick }) => {\n    const setPreview = usePreviewUpdater();\n\n    const onViewAllFocus = useCallback(\n        () => {\n            if (isFunction(setPreview)) {\n                setPreview({\n                    programme: {\n                        categories: [category]\n                    },\n                    contentType: 'viewAll',\n                    animate: true\n                });\n            }\n        },\n        [category] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const onViewAllClick = useCallback(() => {\n        setPreview(null);\n        onClick();\n    }, [setPreview, onClick]);\n\n    return (\n        <MemoLink\n            className=\"ViewAllTile\"\n            onFocus={onViewAllFocus}\n            id={id}\n            to={link}\n            position={position}\n            backTo={backTo}\n            throttle={throttle}\n            onClick={onViewAllClick}\n        >\n            <div className=\"ViewAllTile__wrapper\">\n                <div className=\"ViewAllTile__content\">\n                    <div className=\"ViewAllTile__copy\">{children}</div>\n                </div>\n            </div>\n        </MemoLink>\n    );\n};\n\nViewAllTile.defaultProps = {\n    position: null,\n    backTo: null,\n    throttle: {\n        horizontal: 0,\n        vertical: 0\n    },\n    onClick: () => null\n};\n\nViewAllTile.propTypes = {\n    category: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n    id: PropTypes.string.isRequired,\n    position: PropTypes.number,\n    backTo: SharedPropTypes.backTo,\n    throttle: PropTypes.shape({\n        horizontal: PropTypes.number,\n        vertical: PropTypes.number\n    }),\n    onClick: PropTypes.func\n};\n\nexport default ViewAllTile;\n","import { feeds } from '@itv/fe-cerberus';\nimport useCerberus from 'hooks/useCerberus';\n\nconst { getAllTargetedContainersWithCollections } = feeds.contentInventory.collections;\n\nconst useAllTargetedContainers = () => {\n    const { result, loading, networkError } = useCerberus({\n        cerberusMethod: () => getAllTargetedContainersWithCollections()\n    });\n\n    if (loading) {\n        return { loading: true };\n    }\n\n    return { targetedContainers: result, loading: false, networkError };\n};\n\nexport default useAllTargetedContainers;\n","import { paths } from 'routes/constants';\n\nconst getViewAllEnabled = ({ viewAll, hasModule, contentType, subsequentJourney }) => {\n    const viewAllText = subsequentJourney?.ctv?.label ?? subsequentJourney?.label;\n    const viewAllLink = subsequentJourney?.ctv?.destinationUrl ?? subsequentJourney?.destinationUrl;\n\n    const isCategory = contentType === 'category';\n    const isCategoriesEnabled = hasModule('categories');\n    const isCollectionsEnabled = hasModule('collections');\n    const isCollectionsLandingPageLink = viewAllLink === paths.collections;\n    const hasRequiredViewAllContent = !!(viewAll && viewAllText && viewAllLink);\n\n    let viewAllEnabled = hasRequiredViewAllContent;\n\n    if (isCollectionsLandingPageLink) {\n        viewAllEnabled = isCollectionsEnabled;\n    }\n\n    if (isCategory) {\n        viewAllEnabled = isCategoriesEnabled && hasRequiredViewAllContent;\n    }\n\n    return {\n        viewAllLink,\n        viewAllText,\n        viewAllEnabled\n    };\n};\n\nexport default getViewAllEnabled;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport slugify from 'slugify';\nimport { useDevice } from 'contexts/DeviceContext';\nimport throttle from 'constants/tileThrottle';\nimport ProgrammeTile from 'components/ProgrammeTile';\nimport { useCptListClickTracking } from 'utils/tracking/hooks/useCptTracking';\nimport ViewAllTile from 'components/ViewAllTile';\nimport SharedPropTypes, { DiscoveryCollectionPropType, ContentInventoryCollectionPropType } from 'helpers/propTypes';\nimport getTileLink from 'helpers/getTileLink';\nimport Slider from '../Slider';\nimport getViewAllEnabled from './getViewAllEnabled';\nimport { PORTRAIT_TILE_DISTANCE, BASIC_TILE_DISTANCE } from './constants';\n\nconst CollectionSlider = ({\n    id,\n    collection,\n    isPortrait,\n    isCuratedImages,\n    linkToEpisode,\n    linkToPromoURL,\n    viewAll,\n    contentType,\n    writeToDOM,\n    style,\n    onClick,\n    headingOverride\n}) => {\n    const { trackCptEvent } = useCptListClickTracking();\n    const { hasModule } = useDevice();\n\n    if (!collection) return null;\n\n    const { headingTitle, shows = [], page, subsequentJourney } = collection;\n\n    const reducedShows = shows?.slice(0, 12);\n\n    const { viewAllEnabled, viewAllText, viewAllLink } = getViewAllEnabled({\n        viewAll,\n        hasModule,\n        contentType,\n        subsequentJourney\n    });\n\n    const sliderTitleSlug = slugify(headingTitle || '')\n        .replace(/-/g, '_')\n        .toLowerCase();\n\n    const handleProgrammeClick = ({ type, programmeId, episodeId, index }) => {\n        let listItem = {\n            listing_id: `${page}_${sliderTitleSlug}`,\n            position: index + 1\n        };\n\n        if (type === 'episode' || type === 'special') {\n            listItem = {\n                episode_id: episodeId,\n                ...listItem\n            };\n        } else {\n            listItem = {\n                programme_id: programmeId,\n                ...listItem\n            };\n        }\n\n        trackCptEvent(listItem);\n    };\n\n    const handleViewAllClick = () => {\n        const listItem = {\n            listing_id: `${page}_${sliderTitleSlug}_viewAll`\n        };\n\n        trackCptEvent(listItem);\n    };\n\n    return (\n        !!reducedShows?.length && (\n            <Slider\n                id={id}\n                header={{ title: headingOverride || headingTitle }}\n                data-testid={id}\n                optimiseRenders\n                writeToDOM={writeToDOM}\n                style={style}\n                onClick={onClick}\n                transformDistance={isPortrait ? PORTRAIT_TILE_DISTANCE : BASIC_TILE_DISTANCE}\n                items={reducedShows\n                    .map((programme, index) => {\n                        const { type, programmeId, episodeId, encodedEpisodeId, encodedProgrammeId, tagName, promoUrl } = programme;\n                        return (\n                            <ProgrammeTile\n                                key={`ProgrammeTile-${sliderTitleSlug}-${encodedEpisodeId?.letterA}`}\n                                id={`collection-${id}-${encodedEpisodeId?.letterA}`}\n                                link={getTileLink({\n                                    linkToPromoURL,\n                                    promoUrl,\n                                    linkToEpisode,\n                                    programmeId,\n                                    encodedProgrammeId,\n                                    encodedEpisodeId\n                                })}\n                                programme={programme}\n                                contentType={type}\n                                tagName={tagName}\n                                onClick={() => handleProgrammeClick({ type, programmeId, episodeId, index })}\n                                throttle={throttle}\n                                position={index}\n                                isPortrait={isPortrait}\n                                isCuratedImages={isCuratedImages}\n                            />\n                        );\n                    })\n                    .concat(\n                        viewAllEnabled ? (\n                            <ViewAllTile\n                                category={headingTitle}\n                                id={`collection-${id}-viewAll`}\n                                link={viewAllLink}\n                                position={shows.length}\n                                throttle={throttle}\n                                onClick={() => handleViewAllClick()}\n                            >\n                                {viewAllText}\n                                <div className=\"CollectionSlider__category\">{headingTitle}</div>\n                            </ViewAllTile>\n                        ) : (\n                            []\n                        )\n                    )}\n            />\n        )\n    );\n};\n\nCollectionSlider.defaultProps = {\n    id: null,\n    collection: null,\n    linkToEpisode: false,\n    linkToPromoURL: false,\n    viewAll: false,\n    contentType: null,\n    writeToDOM: true,\n    style: null,\n    onClick: null,\n    headingOverride: null,\n    isPortrait: false,\n    isCuratedImages: false\n};\n\nCollectionSlider.propTypes = {\n    id: PropTypes.string,\n    collection: PropTypes.oneOfType([DiscoveryCollectionPropType, ContentInventoryCollectionPropType]),\n    linkToEpisode: PropTypes.bool,\n    linkToPromoURL: PropTypes.bool,\n    viewAll: PropTypes.bool,\n    contentType: PropTypes.string,\n    writeToDOM: SharedPropTypes.writeToDOM,\n    style: PropTypes.shape({}),\n    onClick: PropTypes.func,\n    headingOverride: PropTypes.string,\n    isPortrait: PropTypes.bool,\n    isCuratedImages: PropTypes.bool\n};\n\nexport default memo(CollectionSlider);\n","export const PORTRAIT_TILE_DISTANCE = 174;\nexport const BASIC_TILE_DISTANCE = 260;\n","export const LETTERBOX_DEBOUNCE_MS = 1000;\n\nexport const letterboxPreset = {\n    name: 'letterbox',\n    options: {\n        lowResOnly: true\n    }\n};\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport { LETTERBOX_DEBOUNCE_MS } from '../constants';\n\nconst useDebounceLetterboxImage = ({ sources }) => {\n    const [showImage, setShowImage] = useState(false);\n\n    const timeoutRef = useRef();\n\n    const clearTimeoutRef = useCallback(() => {\n        if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n        }\n\n        setShowImage(false);\n    }, []);\n\n    const setTimeoutRef = useCallback(() => {\n        timeoutRef.current = setTimeout(() => setShowImage(true), LETTERBOX_DEBOUNCE_MS);\n    }, []);\n\n    useEffect(() => {\n        clearTimeoutRef();\n        setTimeoutRef();\n\n        return () => clearTimeoutRef();\n    }, [clearTimeoutRef, setTimeoutRef, sources]);\n\n    return { showImage };\n};\n\nexport default useDebounceLetterboxImage;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Picture from '@itv/fe-components/Picture';\nimport getImages from 'helpers/getImages';\nimport ChannelLogo from '@itv/fe-components/ChannelLogo';\nimport './Letterbox.scss';\nimport { grid, gridColumn, gridItem, widthSevenTwelfths } from '@itv/fe-components/cjs/common/styles/grid.cls';\nimport useDebounceLetterboxImage from './hooks/useDebounceLetterboxImage';\nimport { letterboxPreset } from './constants';\n\nconst Letterbox = ({ image, children, className, channelLogoSrc, id, hideGradient, isPremiumTile, tag }) => {\n    const sources = useMemo(() => (typeof image === 'string' ? getImages(image, letterboxPreset) : image), [image]);\n\n    const { showImage } = useDebounceLetterboxImage({ sources });\n\n    return (\n        <div className={cn(grid, gridColumn, 'Letterbox', className)} id={id}>\n            {!!tag && <div className={cn(gridItem, 'Letterbox__content-tag')}>{tag}</div>}\n            <div className={cn(gridItem, widthSevenTwelfths, 'Letterbox__details')}>{children}</div>\n            {showImage && image && (\n                <div className={isPremiumTile ? 'Letterbox__premium' : 'Letterbox__image'} id=\"letterbox-image\">\n                    <Picture sources={sources} />\n                    {!hideGradient && !isPremiumTile && <div className=\"Letterbox__gradient\" data-testid=\"letterbox-gradient\" />}\n                </div>\n            )}\n            {channelLogoSrc && (\n                <div className=\"Letterbox__channel-logo\" id=\"letterbox-channel-logo\">\n                    <ChannelLogo icon={channelLogoSrc} className=\"LiveTVTile__logo\" />\n                </div>\n            )}\n        </div>\n    );\n};\n\nLetterbox.defaultProps = {\n    image: null,\n    className: null,\n    channelLogoSrc: null,\n    id: null,\n    isPremiumTile: false,\n    hideGradient: false,\n    tag: null\n};\n\nLetterbox.propTypes = {\n    image: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    channelLogoSrc: PropTypes.instanceOf(Object),\n    id: PropTypes.string,\n    isPremiumTile: PropTypes.bool,\n    hideGradient: PropTypes.bool,\n    tag: PropTypes.string\n};\n\nexport default Letterbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { spacing03 } from '@itv/fe-components/cjs/common/styles/spacing.cls';\n\nfunction Description({ description, episodeTitle, episodeNumber }) {\n    let content;\n\n    if (episodeTitle) {\n        content = episodeTitle;\n    } else if (episodeNumber) {\n        content = `Episode ${episodeNumber}`;\n    }\n\n    return (\n        <div className={cn('Letterbox__synopsis', spacing03)}>\n            <p className=\"Letterbox__desc\" data-testid=\"description\">\n                {content && (\n                    <>\n                        <span className=\"Letterbox__episode\">{content}</span> -{' '}\n                    </>\n                )}\n                {description}\n            </p>\n        </div>\n    );\n}\n\nDescription.defaultProps = {\n    episodeTitle: undefined,\n    episodeNumber: undefined\n};\n\nDescription.propTypes = {\n    description: PropTypes.string.isRequired,\n    episodeTitle: PropTypes.string,\n    episodeNumber: PropTypes.number\n};\n\nexport default Description;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '@itv/fe-components/Tag';\nimport Letterbox, { Description } from 'components/Letterbox';\nimport Heading from '@itv/fe-components/Heading';\nimport 'components/Letterbox/Letterbox.scss';\n\nfunction EpisodeLetterbox({ programme }) {\n    const [category] = programme?.categories || [];\n\n    return (\n        <Letterbox image={programme.letterboxImage || programme.image} id=\"episodeLetterbox\">\n            <Heading className=\"Letterbox__heading\">{programme.title}</Heading>\n            {category && <Tag name={category} className=\"Letterbox__tag\" />}\n            <Description\n                description={programme.description ?? ''}\n                episodeTitle={programme.episodeTitle}\n                episodeNumber={programme.episode}\n            />\n        </Letterbox>\n    );\n}\n\nEpisodeLetterbox.defaultProps = {\n    programme: {\n        title: null,\n        image: null,\n        description: '',\n        episode: null,\n        episodeTitle: null,\n        categories: ['']\n    }\n};\n\nEpisodeLetterbox.propTypes = {\n    programme: PropTypes.shape({\n        title: PropTypes.string,\n        image: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n        letterboxImage: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n        description: PropTypes.string,\n        episodeTitle: PropTypes.string,\n        episode: PropTypes.number,\n        categories: PropTypes.arrayOf(PropTypes.string)\n    })\n};\n\nexport default EpisodeLetterbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Letterbox from 'components/Letterbox';\nimport ChannelLogo from '@itv/fe-components/ChannelLogo';\nimport { logoBritboxColourSquare } from '@itv/fe-components/icons/logoBritboxColourSquare';\nimport './BritboxPromoLetterbox.scss';\nimport Heading from '@itv/fe-components/Heading';\n\nfunction BritboxPromoLetterbox({ content }) {\n    const { letterboxTitle, letterboxDescription, letterboxImage, letterboxText } = content;\n    const letterboxTextParts = letterboxText.split('.');\n    const title = `${letterboxTextParts[0]}.`;\n    const text = letterboxTextParts.slice(1).join('.');\n\n    return (\n        <Letterbox image={letterboxImage} hideGradient className=\"BritboxPromoLetterbox\" id=\"britboxPromoLetterbox\">\n            <ChannelLogo className=\"BritboxPromoLetterbox__logo\" icon={logoBritboxColourSquare} />\n            <Heading className=\"BritboxPromoLetterbox__heading\">{letterboxTitle}</Heading>\n            <Heading element=\"h2\" type=\"subtitle\" className=\"BritboxPromoLetterbox__title\">\n                {letterboxDescription}\n            </Heading>\n            <p className=\"BritboxPromoLetterbox__text\">\n                <strong>{title}</strong>\n            </p>\n            <p className=\"BritboxPromoLetterbox__text\">{text}</p>\n        </Letterbox>\n    );\n}\n\nBritboxPromoLetterbox.defaultProps = {\n    content: {\n        letterboxTitle: null,\n        letterboxDescription: null,\n        letterboxImage: null,\n        letterboxText: null\n    }\n};\n\nBritboxPromoLetterbox.propTypes = {\n    content: PropTypes.shape({\n        letterboxTitle: PropTypes.string,\n        letterboxDescription: PropTypes.string,\n        letterboxImage: PropTypes.string,\n        letterboxText: PropTypes.string\n    })\n};\n\nexport default BritboxPromoLetterbox;\n","import { channels } from '@itv/fe-components/ProgressIndicator';\nimport * as iconsList from '@itv/fe-components/icons';\nimport capitalize from 'lodash/fp/capitalize';\n\nconst channelLogoSrc = (channelId) => {\n    const iconName =\n        channelId === channels.ITV || channelId === channels.ITVBE\n            ? `logo${capitalize(channelId)}ColourNeg`\n            : `logo${capitalize(channelId)}ColourPos`;\n\n    const iconSrc = iconsList[iconName];\n\n    return iconSrc;\n};\n\nexport default channelLogoSrc;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Tag from '@itv/fe-components/Tag';\nimport ProgressIndicator from '@itv/fe-components/ProgressIndicator';\nimport Letterbox from 'components/Letterbox';\nimport Heading from '@itv/fe-components/Heading';\nimport FocusGroup from 'focus/FocusGroup';\nimport channelLogoSrc from 'helpers/getChannelLogo';\nimport PlayIcon from '@itv/fe-components/icons/play';\nimport Icon, { sizeList } from '@itv/fe-components/Icon';\nimport PlayerChecksTrigger from 'components/PlayerChecksTrigger';\nimport { useNavActions } from 'contexts/NavContext';\nimport { useDevice } from 'contexts/DeviceContext';\n\nimport 'components/Letterbox/Letterbox.scss';\nimport './SimulcastLetterbox.scss';\n\nfunction SimulcastLetterbox({ programme, onFocus, playLink, startAgainLink, focusId }) {\n    const { setSubNavStealFocus } = useNavActions();\n\n    const onCancel = useCallback(() => setSubNavStealFocus(true), [setSubNavStealFocus]);\n\n    // Temporary fix for SVG icons with stroke property breaking AFTV 4K\n    // See https://itvplc.jira.com/browse/FES-512 for more info\n    const { config } = useDevice();\n    const { deviceGroup } = config;\n    const showTag = deviceGroup !== 'amazonfiretv';\n\n    return (\n        <Letterbox image={programme.channelBackground} channelLogoSrc={channelLogoSrc(programme.channelId)} id=\"simulcastLetterbox\">\n            <div className={cn('Letterbox__now', { SimulcastLetterbox__now: playLink })}>\n                {!playLink && <div className=\"Letterbox__label\">Now</div>}\n                <Heading className={cn('Letterbox__heading', { SimulcastLetterbox__heading: playLink })} id=\"letterbox-heading\">\n                    {programme.title}\n                </Heading>\n                {showTag && <Tag name=\"Live\" className=\"Letterbox__tag Letterbox__tag--simulcast\" />}\n                <div className=\"Letterbox__time\" id=\"letterbox-now-time\">\n                    {programme.time}\n                </div>\n            </div>\n            {playLink && (\n                <FocusGroup id={focusId}>\n                    <PlayerChecksTrigger\n                        id=\"simulcastPlayButton\"\n                        to={playLink}\n                        className=\"Link__button SimulcastLetterbox__button\"\n                        onFocus={onFocus}\n                        onCancel={onCancel}\n                    >\n                        <Icon src={PlayIcon} size={sizeList.medium} />\n                        Watch Live\n                    </PlayerChecksTrigger>\n                    {startAgainLink && (\n                        <PlayerChecksTrigger\n                            id=\"simulcastFromStartButton\"\n                            to={startAgainLink}\n                            className=\"Link__button SimulcastLetterbox__startAgainButton\"\n                            onFocus={onFocus}\n                            onCancel={onCancel}\n                        >\n                            Start Again\n                        </PlayerChecksTrigger>\n                    )}\n                    {!programme.broadcastEnded && programme.next && (\n                        <>\n                            <div className=\"SimulcastLetterbox__wrapper\">\n                                <ProgressIndicator\n                                    progress={programme.progress}\n                                    channel={programme.channelId}\n                                    className=\"SimulcastLetterbox__progress\"\n                                    data-testid=\"progress-indicator\"\n                                />\n                            </div>\n                            {!programme.next.broadcastEnded && (\n                                <div className=\"Letterbox__next\" id=\"letterbox-next\">\n                                    <div className=\"Letterbox__label SimulcastLetterbox__label\">Next:&nbsp;</div>\n                                    <div className=\"Letterbox__time SimulcastLetterbox__time\" id=\"letterbox-next-time\">\n                                        {programme.next.time}\n                                    </div>\n                                    <Heading\n                                        element=\"h4\"\n                                        className=\"Letterbox__subheading SimulcastLetterbox__subheading\"\n                                        id=\"letterbox-subheading\"\n                                    >\n                                        {programme.next.title}\n                                    </Heading>\n                                </div>\n                            )}\n                        </>\n                    )}\n                </FocusGroup>\n            )}\n            {!playLink && programme.next && (\n                <div className=\"Letterbox__next\">\n                    <div className=\"Letterbox__label\">Next</div>\n                    <Heading element=\"h4\" className=\"Letterbox__subheading\">\n                        {programme.next.title}\n                    </Heading>\n                    <div className=\"Letterbox__time\">{programme.next.time}</div>\n                </div>\n            )}\n        </Letterbox>\n    );\n}\n\nSimulcastLetterbox.defaultProps = {\n    playLink: null,\n    startAgainLink: null,\n    onFocus: () => {},\n    focusId: 'SimulcastLetterbox',\n    programme: {\n        title: null,\n        time: null,\n        channelBackground: null,\n        description: '',\n        episode: null,\n        episodeTitle: null,\n        categories: [''],\n        channelId: '',\n        progress: null,\n        duration: null,\n        broadcastEnded: false,\n        next: {\n            title: null,\n            broadcastEnded: false,\n            time: null\n        }\n    }\n};\n\nSimulcastLetterbox.propTypes = {\n    playLink: PropTypes.shape({ pathname: PropTypes.string }),\n    startAgainLink: PropTypes.shape({ pathname: PropTypes.string }),\n    onFocus: PropTypes.func,\n    focusId: PropTypes.string,\n    programme: PropTypes.shape({\n        title: PropTypes.string,\n        time: PropTypes.string,\n        channelBackground: PropTypes.string,\n        description: PropTypes.string,\n        episodeTitle: PropTypes.string,\n        episode: PropTypes.number,\n        categories: PropTypes.arrayOf(PropTypes.string),\n        channelId: PropTypes.string,\n        progress: PropTypes.number,\n        duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        broadcastEnded: PropTypes.bool,\n        startAgainPlaylistUrl: PropTypes.string,\n        next: PropTypes.shape({\n            title: PropTypes.string,\n            broadcastEnded: PropTypes.bool,\n            time: PropTypes.string\n        })\n    })\n};\n\nexport default SimulcastLetterbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Letterbox from 'components/Letterbox';\nimport Heading from '@itv/fe-components/Heading';\nimport viewAllImage from './images/view-all.jpg';\nimport viewAllImage2x from './images/view-all@2x.jpg';\nimport './ViewAllLetterbox.scss';\n\nconst imageSources = {\n    0: {\n        '1x': viewAllImage,\n        '2x': viewAllImage2x\n    }\n};\n\nfunction ViewAllLetterbox({ category }) {\n    return (\n        <Letterbox className=\"ViewAllLetterbox\" image={imageSources} id=\"viewAllLetterbox\">\n            <Heading className=\"ViewAllLetterbox__heading\">\n                <span className=\"ViewAllLetterbox__discover\">Discover More</span>\n                <span className=\"\">{category}</span>\n            </Heading>\n        </Letterbox>\n    );\n}\n\nViewAllLetterbox.defaultProps = {\n    category: ''\n};\n\nViewAllLetterbox.propTypes = {\n    category: PropTypes.string\n};\n\nexport default ViewAllLetterbox;\n","export default __webpack_public_path__ + \"static/media/view-all.d55c0f6c.jpg\";","export default __webpack_public_path__ + \"static/media/view-all@2x.40a2440b.jpg\";","function showTimeLeft(availabilityEnd) {\n    const now = new Date();\n    const next30days = new Date(now.setDate(now.getDate() + 30));\n    return availabilityEnd <= next30days.toISOString();\n}\n\nexport default showTimeLeft;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '@itv/fe-components/Tag';\nimport TimeLeft from '@itv/fe-components/TimeLeft';\nimport Letterbox, { Description } from 'components/Letterbox';\nimport 'components/Letterbox/Letterbox.scss';\nimport 'components/BroadcastInfo/BroadcastInfo.scss';\nimport Heading from '@itv/fe-components/Heading';\nimport showTimeLeft from '../../../../helpers/showTimeLeft';\n\nfunction ContinueWatchingLetterbox({ programme }) {\n    const { image, availabilityEnd, title, synopsis } = programme;\n    const [programmeCategory] = programme?.categories || [];\n    return (\n        <Letterbox image={image} id=\"continueWatchingLetterbox\">\n            <Heading className=\"Letterbox__heading\">{title}</Heading>\n            {programmeCategory && <Tag name={programmeCategory} className=\"Letterbox__tag\" />}\n            <div className=\"BroadcastInfo\">\n                {showTimeLeft(availabilityEnd) && (\n                    <div className=\"BroadcastInfo__container\">\n                        <div className=\"BroadcastInfo__text\" data-testid=\"cw-availability\">\n                            <TimeLeft className=\"Letterbox__time-left\" availabilityEnd={availabilityEnd} id=\"time-left\" />\n                        </div>\n                    </div>\n                )}\n            </div>\n            {!!synopsis && <Description description={synopsis} />}\n        </Letterbox>\n    );\n}\n\nContinueWatchingLetterbox.defaultProps = {\n    programme: {\n        title: null,\n        image: null,\n        synopsis: '',\n        availabilityEnd: null\n    }\n};\n\nContinueWatchingLetterbox.propTypes = {\n    programme: PropTypes.shape({\n        title: PropTypes.string,\n        image: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n        synopsis: PropTypes.string,\n        availabilityEnd: PropTypes.string,\n        channel: PropTypes.string,\n        categories: PropTypes.arrayOf(PropTypes.string)\n    })\n};\n\nexport default ContinueWatchingLetterbox;\n","import React from 'react';\nimport EpisodeInfo from '@itv/fe-components/EpisodeInfo';\nimport PropTypes from 'prop-types';\nimport useContentLogic from './hooks/useContentLogic';\nimport './BroadcastInfo.scss';\n\nfunction BroadcastInfo({ contentType, programme, category }) {\n    const { getContent } = useContentLogic();\n    const { dateTime, episode, series } = programme;\n    const isProgramme = contentType === 'programme';\n    return Object.entries(programme).length ? (\n        <div className=\"BroadcastInfo\" data-testid=\"broadcast-info\">\n            {isProgramme ? (\n                <>\n                    <div />\n                    {getContent(contentType, programme, category)}\n                </>\n            ) : (\n                <EpisodeInfo dateTime={dateTime} episode={episode} series={series} useDateRelative />\n            )}\n        </div>\n    ) : null;\n}\n\nBroadcastInfo.defaultProps = {\n    category: undefined,\n    programme: {}\n};\n\nBroadcastInfo.propTypes = {\n    contentType: PropTypes.oneOf(['episode', 'programme', 'common']).isRequired,\n    category: PropTypes.string,\n    programme: PropTypes.shape({\n        title: PropTypes.string,\n        channel: PropTypes.string,\n        dateTime: PropTypes.string,\n        episodeCount: PropTypes.number,\n        series: PropTypes.number,\n        episode: PropTypes.number,\n        duration: PropTypes.string\n    })\n};\n\nexport default BroadcastInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function useContentLogic() {\n    const getContent = (contentType, programme, category) => {\n        if (!contentType || !programme) {\n            return '';\n        }\n\n        const { duration, episodeCount } = programme;\n\n        let content = '';\n\n        const ContentWrapper = ({ children }) => (\n            <div className=\"BroadcastInfo__container\">\n                <div className=\"BroadcastInfo__text\" data-testid=\"broadcast-text\">\n                    {children}\n                </div>\n            </div>\n        );\n        ContentWrapper.propTypes = {\n            children: PropTypes.node.isRequired\n        };\n\n        if (category?.toLowerCase() === 'films' && duration) {\n            content = <ContentWrapper>{duration}</ContentWrapper>;\n        } else {\n            const episodeText = `Episode${episodeCount > 1 ? 's' : ''}`;\n\n            content = episodeCount ? (\n                <ContentWrapper>\n                    <span className=\"BroadcastInfo__episode-count\">{episodeCount}</span>{' '}\n                    <span className=\"BroadcastInfo__inner-text\">{episodeText}</span>\n                </ContentWrapper>\n            ) : (\n                ''\n            );\n        }\n\n        return content;\n    };\n\n    return { getContent };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tag from '@itv/fe-components/Tag';\nimport Letterbox, { Description } from 'components/Letterbox';\nimport BroadcastInfo from 'components/BroadcastInfo';\nimport 'components/Letterbox/Letterbox.scss';\nimport Heading from '@itv/fe-components/Heading';\n\nfunction CommonLetterbox({ category, programme }) {\n    const programmeCategory = category || (programme.categories && programme.categories[0]);\n\n    return (\n        <Letterbox image={programme.letterboxImage || programme.image} id=\"commonLetterbox\">\n            <Heading className=\"Letterbox__heading\">{programme.title}</Heading>\n            {programmeCategory && <Tag name={programmeCategory} className=\"Letterbox__tag\" />}\n            <BroadcastInfo contentType=\"programme\" programme={programme} category={programmeCategory} />\n            <Description description={programme?.longDescription || programme?.description || programme?.synopsis} />\n        </Letterbox>\n    );\n}\n\nCommonLetterbox.defaultProps = {\n    category: null\n};\n\nCommonLetterbox.propTypes = {\n    category: PropTypes.string,\n    programme: PropTypes.shape({\n        title: PropTypes.string,\n        channel: PropTypes.string,\n        description: PropTypes.string,\n        longDescription: PropTypes.string,\n        synopsis: PropTypes.string,\n        image: PropTypes.string,\n        letterboxImage: PropTypes.string,\n        episodeCount: PropTypes.number,\n        categories: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired\n};\n\nexport default CommonLetterbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Letterbox from 'components/Letterbox';\nimport ChannelLogo from '@itv/fe-components/ChannelLogo';\nimport { logoItvHubPlusColourNeg } from '@itv/fe-components/icons/logoItvHubPlusColourNeg';\nimport './HubplusPromoLetterbox.scss';\n\nfunction HubplusPromoLetterbox({ content }) {\n    const { letterboxTitle, letterboxDescription, letterboxImage, letterboxText } = content;\n    const text = letterboxText;\n\n    return (\n        <Letterbox image={letterboxImage} className=\"HubplusPromoLetterbox\" id=\"hubplusPromoLetterbox\">\n            <ChannelLogo className=\"HubplusPromoLetterbox__logo\" icon={logoItvHubPlusColourNeg} />\n            <h1 className=\"HubplusPromoLetterbox__heading\">{letterboxTitle}</h1>\n            <h2 className=\"HubplusPromoLetterbox__title\">{letterboxDescription}</h2>\n            <p className=\"HubplusPromoLetterbox__text\">{text}</p>\n        </Letterbox>\n    );\n}\n\nHubplusPromoLetterbox.defaultProps = {\n    content: {\n        letterboxTitle: null,\n        letterboxDescription: null,\n        letterboxImage: null,\n        letterboxText: null\n    }\n};\n\nHubplusPromoLetterbox.propTypes = {\n    content: PropTypes.shape({\n        letterboxTitle: PropTypes.string,\n        letterboxDescription: PropTypes.string,\n        letterboxImage: PropTypes.string,\n        letterboxText: PropTypes.string\n    })\n};\n\nexport default HubplusPromoLetterbox;\n","import React from 'react';\n\nimport { usePreviewState } from '../../contexts/PreviewContext';\nimport EpisodeLetterbox from './Letterboxes/EpisodeLetterbox';\nimport BritboxPromoLetterbox from './Letterboxes/BritboxPromoLetterbox';\nimport SimulcastLetterbox from './Letterboxes/SimulcastLetterbox';\nimport ViewAllLetterbox from './Letterboxes/ViewAllLetterbox';\nimport ContinueWatchingLetterbox from './Letterboxes/ContinueWatchingLetterbox';\nimport CommonLetterbox from './Letterboxes/CommonLetterbox';\nimport HubPlusPromoLetterbox from './Letterboxes/HubplusPromoLetterbox';\n\nfunction LetterboxSelector() {\n    const { contentType, programme } = usePreviewState();\n\n    const category = programme?.categories?.[0] ?? null;\n\n    const letterboxMap = {\n        episode: <EpisodeLetterbox contentType={contentType} programme={programme} />,\n        programme: !!programme && <CommonLetterbox contentType={contentType} programme={programme} />,\n        brand: <EpisodeLetterbox contentType={contentType} programme={programme} />,\n        title: <EpisodeLetterbox contentType={contentType} programme={programme} />,\n        special: <EpisodeLetterbox contentType={contentType} programme={programme} />,\n        series: <EpisodeLetterbox contentType={contentType} programme={programme} />,\n        britboxPromo: <BritboxPromoLetterbox content={programme} />,\n        britboxPromoTile: <BritboxPromoLetterbox content={programme} />,\n        hubplusEntertainmentPromoTile: <HubPlusPromoLetterbox content={programme} />,\n        hubplusFullSeriesPromoTile: <HubPlusPromoLetterbox content={programme} />,\n        simulcast: <SimulcastLetterbox contentType={contentType} programme={programme} />,\n        viewAll: <ViewAllLetterbox category={category} />,\n        continueWatching: <ContinueWatchingLetterbox contentType={contentType} programme={programme} />,\n        common: !!programme && <CommonLetterbox category={category} programme={programme} />\n    };\n\n    return <> {letterboxMap[contentType]} </>;\n}\n\nexport default LetterboxSelector;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { usePreviewState, usePreviewUpdater } from 'contexts/PreviewContext';\nimport FocusGroup from 'focus/FocusGroup';\nimport ScrollableRows from 'components/ScrollableRows';\nimport { rowTypeSlider } from 'components/ScrollableRows/constants';\nimport { useSponsorship } from 'contexts/SponsorshipContext';\nimport CollectionSlider from 'components/CollectionSlider';\nimport LetterboxSelector from '../../../components/LetterboxSelector';\nimport { TargetedContainerPropType } from '../../../helpers/propTypes';\nimport './CollectionsContent.scss';\n\nconst collectionsSliderId = 'collectionSliders';\n\nconst CollectionsContent = ({ targetedContainers }) => {\n    const preview = usePreviewState();\n    const setPreview = usePreviewUpdater();\n    const { programme } = preview;\n\n    useEffect(() => {\n        if (targetedContainers && targetedContainers.length > 0 && !programme) {\n            setPreview({\n                programme: targetedContainers[0]?.collection?.shows[0],\n                contentType: 'common'\n            });\n        }\n    }, [programme, setPreview, targetedContainers]);\n\n    useSponsorship({ content: programme });\n\n    return (\n        <div className=\"CollectionsContent\">\n            <LetterboxSelector />\n            <FocusGroup\n                id={collectionsSliderId}\n                className=\"CollectionsContent__sliders-container\"\n                stealFocus\n                orientation=\"column\"\n                jumpToLastFocus\n                backToMemory\n            >\n                <ScrollableRows>\n                    {targetedContainers.map((targetedContainer) => {\n                        const { collection } = targetedContainer;\n                        return (\n                            <CollectionSlider\n                                id={collection?.sliderName}\n                                key={collection?.sliderName}\n                                collection={collection}\n                                rowType={rowTypeSlider}\n                                linkToEpisode\n                                height={256}\n                                curatedImages={false}\n                            />\n                        );\n                    })}\n                </ScrollableRows>\n            </FocusGroup>\n        </div>\n    );\n};\n\nCollectionsContent.propTypes = {\n    targetedContainers: PropTypes.arrayOf(TargetedContainerPropType).isRequired\n};\n\nexport default CollectionsContent;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { PreviewProvider } from 'contexts/PreviewContext';\nimport { PageIds, PageTypes } from 'utils/tracking';\nimport NetworkErrorModal from 'components/NetworkErrorModal';\nimport Page from 'components/Page';\nimport LoadingBar from 'components/LoadingBar';\nimport { SponsorshipArea, withSponsorship } from 'components/Sponsorship';\nimport useAllTargetedContainers from './hooks/useAllTargetedContainers';\nimport CollectionsContent from './CollectionsContent';\n\nconst Collections = () => {\n    const { pathname } = useLocation();\n    const { targetedContainers, loading, networkError } = useAllTargetedContainers();\n    if (loading) return <LoadingBar />;\n    if (networkError || !targetedContainers || !targetedContainers.length) return <NetworkErrorModal />;\n    return (\n        <Page\n            navTitle=\"Collections\"\n            id=\"collections\"\n            trackingPageType={PageTypes.PROGRAMME_LIST}\n            trackingPageId={PageIds.COLLECTIONS}\n            trackingRoute={pathname}\n        >\n            <PreviewProvider>\n                <CollectionsContent targetedContainers={targetedContainers} />\n            </PreviewProvider>\n        </Page>\n    );\n};\n\nexport default withSponsorship(Collections, SponsorshipArea.CATEGORY);\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var convert = require('./convert'),\n    func = convert('capitalize', require('../capitalize'), require('./_falseOptions'));\n\nfunc.placeholder = require('./placeholder');\nmodule.exports = func;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n"],"names":["ViewAllTile","link","category","children","id","position","backTo","throttle","onClick","setPreview","usePreviewUpdater","onViewAllFocus","useCallback","isFunction","programme","categories","contentType","animate","onViewAllClick","MemoLink","className","onFocus","to","defaultProps","horizontal","vertical","propTypes","PropTypes","SharedPropTypes","getAllTargetedContainersWithCollections","feeds","useCerberus","cerberusMethod","result","loading","networkError","targetedContainers","viewAll","hasModule","subsequentJourney","viewAllText","ctv","label","viewAllLink","destinationUrl","isCategory","isCategoriesEnabled","isCollectionsEnabled","hasRequiredViewAllContent","viewAllEnabled","paths","CollectionSlider","collection","isPortrait","isCuratedImages","linkToEpisode","linkToPromoURL","writeToDOM","style","headingOverride","trackCptEvent","useCptListClickTracking","useDevice","headingTitle","shows","page","reducedShows","slice","getViewAllEnabled","sliderTitleSlug","slugify","replace","toLowerCase","length","Slider","header","title","optimiseRenders","transformDistance","items","map","index","type","programmeId","episodeId","encodedEpisodeId","encodedProgrammeId","tagName","promoUrl","ProgrammeTile","key","letterA","getTileLink","listItem","listing_id","episode_id","programme_id","handleProgrammeClick","concat","handleViewAllClick","DiscoveryCollectionPropType","ContentInventoryCollectionPropType","memo","letterboxPreset","name","options","lowResOnly","sources","useState","showImage","setShowImage","timeoutRef","useRef","clearTimeoutRef","current","clearTimeout","setTimeoutRef","setTimeout","useEffect","Letterbox","image","channelLogoSrc","hideGradient","isPremiumTile","tag","useMemo","getImages","useDebounceLetterboxImage","cn","grid","gridColumn","gridItem","widthSevenTwelfths","Picture","ChannelLogo","icon","Object","Description","content","description","episodeTitle","episodeNumber","spacing03","undefined","EpisodeLetterbox","letterboxImage","Heading","Tag","episode","BritboxPromoLetterbox","letterboxTitle","letterboxDescription","letterboxTextParts","letterboxText","split","text","join","logoBritboxColourSquare","element","channelId","iconName","channels","capitalize","iconsList","SimulcastLetterbox","playLink","startAgainLink","focusId","setSubNavStealFocus","useNavActions","onCancel","showTag","config","deviceGroup","channelBackground","SimulcastLetterbox__now","SimulcastLetterbox__heading","time","FocusGroup","PlayerChecksTrigger","Icon","src","PlayIcon","size","sizeList","broadcastEnded","next","ProgressIndicator","progress","channel","duration","pathname","startAgainPlaylistUrl","imageSources","ViewAllLetterbox","availabilityEnd","now","Date","setDate","getDate","toISOString","ContinueWatchingLetterbox","synopsis","programmeCategory","showTimeLeft","BroadcastInfo","getContent","episodeCount","ContentWrapper","episodeText","dateTime","series","isProgramme","entries","useDateRelative","isRequired","CommonLetterbox","longDescription","HubplusPromoLetterbox","logoItvHubPlusColourNeg","usePreviewState","letterboxMap","brand","special","britboxPromo","britboxPromoTile","hubplusEntertainmentPromoTile","hubplusFullSeriesPromoTile","simulcast","continueWatching","common","CollectionsContent","preview","useSponsorship","stealFocus","orientation","jumpToLastFocus","backToMemory","ScrollableRows","targetedContainer","sliderName","rowType","rowTypeSlider","height","curatedImages","TargetedContainerPropType","withSponsorship","useLocation","useAllTargetedContainers","LoadingBar","Page","navTitle","trackingPageType","PageTypes","trackingPageId","PageIds","trackingRoute","NetworkErrorModal","SponsorshipArea","module","exports","string","baseSlice","require","array","start","end","castSlice","hasUnicode","stringToArray","toString","methodName","strSymbols","chr","charAt","trailing","reHasUnicode","RegExp","test","asciiToArray","unicodeToArray","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","rsSymbol","reUnicode","match","upperFirst","func","convert","placeholder","createCaseFirst"],"sourceRoot":""}