{"version":3,"file":"static/js/sign-in.8abde87b.chunk.js","mappings":"mSAwCA,EA3Be,WAAH,OACR,gBAACA,EAAA,EAAY,CAACC,GAAG,aAAaC,iBAAkBC,EAAAA,GAAAA,QAAmBC,eAAgBC,EAAAA,GAAAA,SAC/E,uBAAKC,UAAWC,IAAGC,EAAAA,KAAMC,EAAAA,WAAY,WACjC,uBAAKH,UAAWC,IAAGG,EAAAA,SAAUC,EAAAA,oBAAqBC,EAAAA,iBAC9C,gBAACC,EAAAC,WAAU,CAACC,MAAM,UAAUC,eAAa,IAEzC,qBAAGV,UAAU,gBAAc,2JAI3B,gBAACW,EAAA,QAAU,CAAChB,GAAG,gBAAgBK,UAAU,sBACrC,gBAACY,EAAA,QAAM,CAACZ,UAAU,iBAAiBa,GAAIC,EAAAA,EAAAA,WAAkBC,OAAO,gBAAc,oBAKlF,gBAACC,EAAA,GAAO,CAACC,QAAQ,KAAKjB,UAAU,qBAAmB,qBAGnD,qBAAGA,UAAU,gBAAc,SACjB,wBAAMA,UAAU,gBAAc,kCAIrC,C,2ICjBnB,EAbuB,WACnB,IACakB,GACTC,EAAAA,EAAAA,uBADAC,MAASF,YAEOG,GAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,IAAzCC,WAER,OAAIN,EACOG,IAAkB,gBAAC,KAAQ,CAACR,GAAIC,EAAAA,EAAAA,WAAqB,gBAAC,KAAQ,CAACD,GAAIC,EAAAA,EAAAA,SAGvE,gBAACW,EAAA,EAAM,KAClB,C","sources":["pages/Settings/SignIn/SignIn.jsx","pages/Settings/SignInSettings/SignInSettings.jsx"],"sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport FocusGroup from 'focus/FocusGroup';\nimport Button from 'components/Button';\nimport { PageHeader } from 'components/Page';\nimport { PageTypes, PageIds } from 'utils/tracking';\nimport Heading from '@itv/fe-components/Heading';\n\nimport './SignIn.scss';\nimport { grid, gridColumn, gridItem, gridItemAlignCenter, widthTwoThirds } from '@itv/fe-components/cjs/common/styles/grid.cls';\nimport { paths } from '../../../routes/constants';\nimport SettingsPage from '../SettingsPage';\n\nconst SignIn = () => (\n    <SettingsPage id=\"signInPage\" trackingPageType={PageTypes.ACCOUNT} trackingPageId={PageIds.SIGN_IN}>\n        <div className={cn(grid, gridColumn, 'SignIn')}>\n            <div className={cn(gridItem, gridItemAlignCenter, widthTwoThirds)}>\n                <PageHeader title=\"Sign In\" isLargerTitle />\n\n                <p className=\"SignIn__copy\">\n                    You need to have an account to watch our programmes. It&apos;s quick, easy and FREE to set up, plus we&apos;ll keep you\n                    signed in so you only have to do it once.\n                </p>\n                <FocusGroup id=\"signInActions\" className=\"SignIn__focusGroup\">\n                    <Button className=\"SignIn__button\" to={paths.signInPair} backTo=\"sign-in-link\">\n                        Sign in to ITVX\n                    </Button>\n                </FocusGroup>\n\n                <Heading element=\"h2\" className=\"SignIn__subheader\">\n                    Create an account\n                </Heading>\n                <p className=\"SignIn__copy\">\n                    Go to <span className=\"SignIn__link\">www.itv.com/hub/user/signup</span>\n                </p>\n            </div>\n        </div>\n    </SettingsPage>\n);\n\nexport default SignIn;\n","import React, { useContext } from 'react';\nimport SignIn from 'components/SignIn';\nimport { useAppEventsContext } from 'contexts/AppEventsContext';\nimport { Redirect } from 'react-router-dom';\nimport { paths } from 'routes/constants';\nimport UserContext from '@itv/fe-components/UserContext';\n\nconst SignInSettings = () => {\n    const {\n        state: { promptReset }\n    } = useAppEventsContext();\n    const { isLoggedIn: getIsLoggedIn } = useContext(UserContext);\n\n    if (promptReset) {\n        return getIsLoggedIn() ? <Redirect to={paths.homepage} /> : <Redirect to={paths.signIn} />;\n    }\n\n    return <SignIn />;\n};\n\nexport default SignInSettings;\n"],"names":["SettingsPage","id","trackingPageType","PageTypes","trackingPageId","PageIds","className","cn","grid","gridColumn","gridItem","gridItemAlignCenter","widthTwoThirds","Page","PageHeader","title","isLargerTitle","FocusGroup","Button","to","paths","backTo","Heading","element","promptReset","useAppEventsContext","state","getIsLoggedIn","useContext","UserContext","isLoggedIn","SignIn"],"sourceRoot":""}