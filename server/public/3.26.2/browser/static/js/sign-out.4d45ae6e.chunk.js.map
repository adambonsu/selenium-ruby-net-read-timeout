{"version":3,"file":"static/js/sign-out.4d45ae6e.chunk.js","mappings":";qVAIMA,EAAc,SAAH,OAAMC,EAAS,EAATA,UAAS,OAC5B,qBAAGA,UAAWA,GAAU,6FAEpB,wBAAMA,UAAU,qBAAmB,yBAA6B,wBAChE,EAGRD,EAAYE,aAAe,CACvBD,UAAW,MAGfD,EAAYG,UAAY,CACpBF,UAAWG,IAAAA,QAGf,iTClBA,4gGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+kBAAAA,GAAA,gEAAAA,GAAA,2LAAAA,GAAA,WAAAA,GAAA,qGAAAA,IAAA,6SAAAA,IAAA,2OAAAA,EAAA,iBAAAA,EAAA,EAAAA,IAAA,EAAAA,GAAA,EAAAA,GAAA,SAoBA,IAoEA,EApEgB,WACZ,OAA+BC,EAAAA,EAAAA,YAAWC,EAAAA,IAAlCC,EAAU,EAAVA,WAAYC,EAAM,EAANA,OACyB,KAAnBC,EAAAA,EAAAA,eAASC,GAAU,GAAtCC,EAAK,KAAEC,EAAQ,KAC+B,KAAfH,EAAAA,EAAAA,WAAS,GAAM,GAA9CI,EAAW,KAAEC,EAAc,KAC6B,KAAfL,EAAAA,EAAAA,WAAS,GAAM,GAAxDM,EAAgB,KAAEC,EAAmB,KAEpCC,GAAkBC,EAAAA,EAAAA,eAAlBD,eAERE,EAAAA,EAAAA,YAAU,WACN,YAAC,+GAEkDZ,IAAa,KAAD,WAAxCa,EAAiB,EAAxBT,MACRC,EAASQ,GAAmB,gDAE5BJ,GAAoB,GAAM,wDALlC,EAQJ,GAAG,CAACT,IAEJ,IAAMc,EAAa,6BAAG,8FACZb,IAAS,KAAD,GACdc,EAAAA,EAAAA,IAAkBC,EAAAA,GAAAA,+BAClBT,GAAe,IACfU,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,IAAkB,GAClBR,EAAc,OAEdS,EAAAA,EAAAA,SAAQ,CACJC,MAAOC,EAAAA,UAAAA,mBACR,2CACN,kBAXkB,mCAanB,OACI,gCACI,gBAACC,EAAA,EAAY,CAACC,GAAG,cAAcC,iBAAkBC,EAAAA,GAAAA,QAAmBC,eAAgBC,EAAAA,GAAAA,UAC9EvB,GAAUI,EAKR,uBAAKf,UAAWmC,IAAGC,EAAAA,KAAMC,EAAAA,WAAY,YACjC,uBAAKrC,UAAWmC,IAAGG,EAAAA,SAAUC,EAAAA,oBAAqB,uBAC9C,gBAACC,EAAAC,WAAU,CAACC,MAAM,WAAWC,eAAa,KACxC5B,GACE,uBAAKf,UAAU,+BACX,wBAAMA,UAAU,6BAA2B,wBAA6B,IACxE,wBAAMA,UAAU,2BAA2BW,IAGnD,gBAAC,EAAW,CAACX,UAAU,gCACvB,qBAAGA,UAAU,+BAA6B,4HAI1C,gBAAC4C,EAAA,QAAU,KACP,gBAACC,EAAA,QAAM,CAAC7C,UAAU,kBAAkB8C,QAASzB,EAAe0B,OAAO,iBAAe,eAnB9F,uBAAK/C,UAAU,sBACX,gBAACgD,EAAA,EAAS,QA0BrBnC,GAAe,gBAAC,KAAQ,CAACoC,MAAI,EAACC,GAAIC,EAAAA,EAAAA,WAG/C","sources":["components/PrivacyCopy/PrivacyCopy.jsx","pages/Settings/SignOut/SignOut.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PrivacyCopy.scss';\n\nconst PrivacyCopy = ({ className }) => (\n    <p className={className}>\n        You can find out more and manage your Privacy and Personalisation settings by visiting&nbsp;\n        <span className=\"PrivacyCopy__link\">www.itv.com/myprivacy</span> using a web browser.\n    </p>\n);\n\nPrivacyCopy.defaultProps = {\n    className: null\n};\n\nPrivacyCopy.propTypes = {\n    className: PropTypes.string\n};\n\nexport default PrivacyCopy;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport cn from 'classnames';\nimport setSignedInStatus from 'helpers/aftvBridgeSignIn';\nimport { PageTypes, PageIds } from 'utils/tracking';\nimport { cptSend } from 'utils/tracking/cpt';\nimport { CptEvents } from 'utils/tracking/constants';\nimport { grid, gridColumn, gridItem, gridItemAlignCenter } from '@itv/fe-components/cjs/common/styles/grid.cls';\nimport './SignOut.scss';\nimport Button from 'components/Button';\nimport FocusGroup from 'focus/FocusGroup';\nimport { PageHeader } from 'components/Page';\nimport Buffering from 'components/icons/Buffering';\nimport UserContext from '@itv/fe-components/UserContext';\nimport PrivacyCopy from 'components/PrivacyCopy';\nimport { removeStorageItem, Keys } from 'utils/storage';\nimport { setSignedOutCookie } from 'helpers/syncSignIn';\nimport { useProfiles } from 'contexts/ProfilesContext';\nimport SettingsPage from '../SettingsPage';\nimport { paths } from '../../../routes/constants';\n\nconst SignOut = () => {\n    const { getProfile, logout } = useContext(UserContext);\n    const [email, setEmail] = useState(undefined);\n    const [isLoggedOut, setIsLoggedOut] = useState(false);\n    const [failedToGetEmail, setFailedToGetEmail] = useState(false);\n\n    const { selectProfile } = useProfiles();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const { email: signedInUserEmail } = await getProfile();\n                setEmail(signedInUserEmail);\n            } catch (error) {\n                setFailedToGetEmail(true);\n            }\n        })();\n    }, [getProfile]);\n\n    const onLogOutClick = async () => {\n        await logout();\n        removeStorageItem(Keys.HAS_USER_SEEN_KIDS_ONBOARDING);\n        setIsLoggedOut(true);\n        setSignedOutCookie();\n        setSignedInStatus(false);\n        selectProfile(null);\n\n        cptSend({\n            event: CptEvents.LOGIN_FAIL_EVENT\n        });\n    };\n\n    return (\n        <>\n            <SettingsPage id=\"signOutPage\" trackingPageType={PageTypes.ACCOUNT} trackingPageId={PageIds.SIGN_OUT}>\n                {!email && !failedToGetEmail ? (\n                    <div className=\"SignOut__buffering\">\n                        <Buffering />\n                    </div>\n                ) : (\n                    <div className={cn(grid, gridColumn, 'SignOut')}>\n                        <div className={cn(gridItem, gridItemAlignCenter, 'SignOut__container')}>\n                            <PageHeader title=\"Sign Out\" isLargerTitle />\n                            {!failedToGetEmail && (\n                                <div className=\"SignOut__details--container\">\n                                    <span className=\"SignOut__details--message\">You are signed in as</span>{' '}\n                                    <span className=\"SignOut__details--email\">{email}</span>\n                                </div>\n                            )}\n                            <PrivacyCopy className=\"SignOut__details--paragraph\" />\n                            <p className=\"SignOut__details--paragraph\">\n                                Once you have signed out of your account, you will no longer be able to easily find content you have\n                                previously watched.\n                            </p>\n                            <FocusGroup>\n                                <Button className=\"SignOut__button\" onClick={onLogOutClick} backTo=\"sign-out-link\">\n                                    Sign Out\n                                </Button>\n                            </FocusGroup>\n                        </div>\n                    </div>\n                )}\n            </SettingsPage>\n            {isLoggedOut && <Redirect push to={paths.homepage} />}\n        </>\n    );\n};\n\nexport default SignOut;\n"],"names":["PrivacyCopy","className","defaultProps","propTypes","PropTypes","i","useContext","UserContext","getProfile","logout","useState","undefined","email","setEmail","isLoggedOut","setIsLoggedOut","failedToGetEmail","setFailedToGetEmail","selectProfile","useProfiles","useEffect","signedInUserEmail","onLogOutClick","removeStorageItem","Keys","setSignedOutCookie","setSignedInStatus","cptSend","event","CptEvents","SettingsPage","id","trackingPageType","PageTypes","trackingPageId","PageIds","cn","grid","gridColumn","gridItem","gridItemAlignCenter","Page","PageHeader","title","isLargerTitle","FocusGroup","Button","onClick","backTo","Buffering","push","to","paths"],"sourceRoot":""}