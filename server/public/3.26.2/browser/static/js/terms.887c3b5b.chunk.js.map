{"version":3,"file":"static/js/terms.887c3b5b.chunk.js","mappings":"qvCAWA,IAkCA,EAlCc,WAAO,IAAD,IACVA,GAASC,EAAAA,EAAAA,aAC2B,KAAZC,EAAAA,EAAAA,UAAS,IAAG,GAAnCC,EAAO,KAAEC,EAAU,KACkB,KAAZF,EAAAA,EAAAA,UAAS,IAAG,GAArCG,EAAQ,KAAEC,EAAW,KAEtBC,EAAY,OAANP,QAAM,IAANA,GAAc,QAAR,EAANA,EAAQQ,cAAM,OAAW,QAAX,EAAd,EAAgBC,iBAAS,WAAnB,EAAN,EAA2BC,MAGvC,GAA0BC,EAAAA,EAAAA,GAASJ,EAFnB,CAAEK,aAAc,SAExBC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAEd,IAAKX,GAAWU,EAAM,CAClB,IAAME,GAASC,EAAAA,EAAAA,GAAUH,GACzBT,EAAWW,EAAOZ,SAClBG,EAAYS,EAAOE,QACvB,CAEA,OACI,gBAACC,EAAA,EAAY,CAACC,GAAG,YAAYC,iBAAkBC,EAAAA,GAAAA,aAAwBC,eAAgBC,EAAAA,GAAAA,sBACnF,uBAAKC,UAAWC,IAAGC,EAAAA,KAAMC,EAAAA,WAAY,iBACjC,uBAAKH,UAAWC,IAAGG,EAAAA,SAAUC,EAAAA,oBAAqBC,EAAAA,mBAAoB,iBACjEjB,EACG,gCACI,gBAACkB,EAAAC,WAAU,CAACC,MAAM,uBAAuB5B,SAAUA,IACnD,gBAAC6B,EAAA,EAAc,CAAC/B,QAASA,EAASgC,OAAO,aAAaC,kBAAgB,KAG1E,gBAACC,EAAA,EAAM,CAACvB,QAASA,MAMzC,C","sources":["pages/Settings/Terms/Terms.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport useFetch from 'hooks/useFetch';\nimport cn from 'classnames';\nimport { useDevice } from 'contexts/DeviceContext';\nimport { PageHeader } from 'components/Page';\nimport ScrollableText, { parseText } from 'components/ScrollableText';\nimport NoData from 'components/NoData';\nimport { PageTypes, PageIds } from 'utils/tracking';\nimport { grid, gridColumn, gridItem, gridItemAlignCenter, widthThreeQuarters } from '@itv/fe-components/cjs/common/styles/grid.cls';\nimport SettingsPage from '../SettingsPage';\n\nconst Terms = () => {\n    const device = useDevice();\n    const [content, setContent] = useState('');\n    const [subtitle, setSubtitle] = useState('');\n\n    const url = device?.config?.resources?.terms;\n    const options = { responseType: 'text' };\n\n    const { data, loading } = useFetch(url, options);\n\n    if (!content && data) {\n        const parsed = parseText(data);\n        setContent(parsed.content);\n        setSubtitle(parsed.updated);\n    }\n\n    return (\n        <SettingsPage id=\"termsPage\" trackingPageType={PageTypes.GENERAL_INFO} trackingPageId={PageIds.TERMS_AND_CONDITIONS}>\n            <div className={cn(grid, gridColumn, 'TermsContent')}>\n                <div className={cn(gridItem, gridItemAlignCenter, widthThreeQuarters, 'TermsContent')}>\n                    {data ? (\n                        <>\n                            <PageHeader title=\"Terms and Conditions\" subtitle={subtitle} />\n                            <ScrollableText content={content} backTo=\"terms-link\" includeScrollBar />\n                        </>\n                    ) : (\n                        <NoData loading={loading} />\n                    )}\n                </div>\n            </div>\n        </SettingsPage>\n    );\n};\n\nexport default Terms;\n"],"names":["device","useDevice","useState","content","setContent","subtitle","setSubtitle","url","config","resources","terms","useFetch","responseType","data","loading","parsed","parseText","updated","SettingsPage","id","trackingPageType","PageTypes","trackingPageId","PageIds","className","cn","grid","gridColumn","gridItem","gridItemAlignCenter","widthThreeQuarters","Page","PageHeader","title","ScrollableText","backTo","includeScrollBar","NoData"],"sourceRoot":""}